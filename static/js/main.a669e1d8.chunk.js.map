{"version":3,"sources":["config/constants/types.ts","utils/prices.ts","state/multicall/actions.ts","components/QuestionHelper/index.tsx","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","config/constants/nftsCollections/types.ts","config/constants/nftsCollections/index.ts","views/Nft/market/constants.ts","utils/providers.ts","components/ConnectWalletButton.tsx","state/farms/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","utils/getGasPrice.ts","state/wallet/hooks.ts","hooks/usePairs.ts","state/predictions/config.ts","state/transactions/actions.ts","state/info/actions.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","config/localization/languages.ts","hooks/useTokenBalance.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useRefresh.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/transactions/hooks.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","hooks/useCallWithGasPrice.ts","state/lottery/helpers.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","state/profile/index.tsx","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","hooks/useAuth.ts","utils/uriToHttp.ts","utils/wallet.ts","utils/currencyId.ts","state/teams/index.tsx","hooks/usePreviousValue.ts","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","utils/calls/sales.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","components/Tags.tsx","components/Loader/CircleLoader.tsx","utils/web3React.ts","state/block/index.ts","utils/getRpcUrl.ts","config/constants/privatesales.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","state/profile/helpers.ts","config/constants/campaigns.ts","components/SearchModal/filtering.ts","hooks/useActiveWeb3React.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","components/Layout/Container.tsx","state/profile/hooks.ts","state/nftMarket/reducer.ts","state/mint/actions.ts","hooks/useLastUpdated.ts","components/TokenImage/index.tsx","components/Menu/Footer.tsx","views/Page.tsx","components/Layout/Row.tsx","hooks/useIsWindowVisible.ts","routerHistory.ts","utils/bigNumber.ts","config/constants/ifo.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/swap/actions.ts","state/pools/helpers.ts","state/achievements/helpers.ts","state/lottery/getUserLotteryData.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","config/constants/tokens.ts","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/burn/actions.ts","utils/formatBalance.ts","utils/achievements.ts","utils/latinise.ts","state/types.ts","components/Layout/Column.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","hooks/useBUSDPrice.ts","components/Loader/PageLoader.tsx","state/lottery/index.ts","utils/getTimePeriods.ts","components/PageHeader/PageHeader.tsx","utils/index.ts","components/Select/Select.tsx","components/PositionCard/index.tsx","state/privatesales/fetchPublicPrivateSaleData.ts","state/privatesales/fetchPrivateSale.ts","state/privatesales/fetchPrivateSales.ts","state/privatesales/fetchPrivateSaleUser.ts","state/privatesales/index.ts","state/voting/helpers.ts","state/voting/index.tsx","state/achievements/index.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","components/Loading.tsx","config/constants/index.ts","utils/contractHelpers.ts","state/user/actions.ts","utils/farmHelpers.ts","utils/apr.ts","components/Balance.tsx","hooks/useIntersectionObserver.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","hooks/useContract.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","state/user/hooks/index.tsx","utils/multicall.ts","config/constants/endpoints.ts","config/index.ts","utils/wrappedCurrency.ts","state/user/hooks/helpers.ts","views/Pools/helpers.tsx","hooks/Tokens.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","state/predictions/helpers.ts","state/predictions/queries.ts","state/multicall/hooks.ts","state/nftMarket/helpers.ts","state/nftMarket/queries.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","state/nftMarket/types.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","hooks/useUserAgent.ts","hooks/useScrollOnRouteChange.ts","style/Global.tsx","components/Menu/config/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/utils.ts","components/Menu/index.tsx","components/Menu/config/footerConfig.ts","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","state/pools/hooks.ts","components/SearchInput/SearchInput.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx","state/lists/actions.ts"],"names":["PoolIds","PoolCategory","LotteryStatus","AuctionStatus","PrivateSaleType","BASE_FEE","Percent","JSBI","BigInt","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","route","pairs","reduce","currentFee","multiply","undefined","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","TokenAmount","token","raw","quotient","CurrencyAmount","ether","computeSlippageAdjustedAmounts","allowedSlippage","pct","basisPointsToPercent","Field","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","currency","symbol","outputAmount","multiplyPriceByAmount","price","amount","significantDigits","parseFloat","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","address","Error","callData","parseCallKey","callKey","pcs","split","length","addMulticallListeners","createAction","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","QuestionWrapper","styled","div","QuestionHelper","text","placement","props","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","color","width","useTheme","useThemeManager","isDark","toggleTheme","theme","useContext","StyledThemeContext","serializedTokens","serializeTokens","pools","sousId","stakingToken","cake","earningToken","contractAddress","poolCategory","CORE","harvest","tokenPerBlock","sortOrder","isFinished","useToast","toastContext","ToastsContext","CollectionKey","collections","PANCAKE","name","slug","SQUAD","description","nftsBaseUrl","pancakeBunniesAddress","getAddress","RPC_URL","getRpcUrl","simpleRpcProvider","ethers","providers","StaticJsonRpcProvider","ConnectWalletButton","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","deserializeFarmUserData","farm","allowance","userData","BigNumber","BIG_ZERO","tokenBalance","stakedBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","deserializeToken","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","harvestInterval","crowPerBlock","usePollFarmsPublicData","includeArchive","dispatch","useAppDispatch","useRefresh","slowRefresh","useEffect","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","useWeb3React","account","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","farms","useSelector","state","deserializedFarmsData","data","loadArchivedFarmsData","userDataLoaded","useFarmFromPid","find","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","gt","overallValueOfAllTokensInFarm","times","totalLpTokens","getBalanceAmount","usePriceCakeBusd","cakePriceBusdAsString","useMemo","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","style","ttl","timer","useRef","removeHandler","id","title","type","handleRemove","useCallback","current","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","index","zIndex","toString","top","DescriptionWithTx","txHash","children","chainId","useActiveWeb3React","as","external","href","getBscScanLink","truncateHash","usePollBlockNumber","refreshTime","isWindowVisible","useIsWindowVisible","setInterval","a","getBlockNumber","blockNumber","setBlock","clearInterval","useBlock","block","useInitialBlock","initialBlock","getGasPrice","GAS_PRICE_GWEI","cronos","useTokenBalancesWithLoadingIndicator","tokens","validatedTokens","filter","isAddress","validatedTokenAddresses","vt","balances","useMultipleContractSingleData","ERC20_INTERFACE","anyLoading","some","callState","loading","memo","i","value","result","useTokenBalances","useTokenBalance","tokenBalances","useCurrencyBalances","currencies","Token","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","addresses","sort","results","useSingleContractMultipleData","useBNBBalances","ETHER","useCurrencyBalance","useAllTokenBalances","allTokens","useAllTokens","Object","values","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencyA","currencyB","wrappedCurrency","pairAddresses","tokenA","tokenB","equals","Pair","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","usePair","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","ROUNDS_PER_PAGE","LEADERBOARD_MIN_ROUNDS_PLAYED","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","Card","Box","padding","border","borderRadius","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","apr","earningTokenPrice","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","roundingDecimalsNew","Math","round","days","daysAsDecimalOfYear","principal","interestEarned","toFixed","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","getApy","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","EN","locale","language","code","languages","languageList","FetchStatus","tokenAddress","NOT_FETCHED","FAILED","useState","balance","fetchStatus","balanceState","setBalanceState","fetchBalance","contract","getBep20Contract","balanceOf","res","console","error","prev","useGetBnbBalance","setFetchStatus","from","setBalance","useLastUpdated","lastUpdated","setLastUpdated","getBalance","walletBalance","refresh","useGetCakeBalance","initialState","isFetching","currentLanguage","languageMap","Map","set","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","getLanguageCodeFromLS","setState","fetchInitialLocales","enLocale","get","fetchLocale","currentLocale","prevState","setLanguage","has","localStorage","setItem","LS_KEY","translate","key","translatedText","match","interpolatedText","keys","forEach","dataKey","templateKey","RegExp","replace","Provider","languageContext","RefreshContext","fast","slow","fetchFarm","lpAddress","calls","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BIG_TEN","pow","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","_hex","crowPerBlockBN","toJSON","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","farmConfig","serializedFarm","getBNBPriceUSD","fetch","ok","json","BIG_ONE","price_BNB","JSON","parse","getFarmFromTokenSymbol","tokenSymbol","preferredQuoteTokens","filteredFarm","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","usdc","wcro","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","eq","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","isArchivedPid","createAsyncThunk","includes","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","userDataEl","findIndex","actions","useTransactionAdder","useDispatch","response","summary","approval","claim","hash","useAllTransactions","s","transactions","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","spender","allTransactions","receipt","useSwapState","swap","useSwapActionHandlers","onCurrencySelection","field","selectCurrency","currencyId","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","typedValueParsed","parseUnits","decimals","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","pair","liquidityToken","useDerivedSwapInfo","inputError","independentField","inputCurrencyId","outputCurrencyId","inputCurrency","useCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","indexOf","useUserSlippageTolerance","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","toLowerCase","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","replaceSwapState","useCallWithGasPrice","gasPrice","useGasPrice","callWithGasPrice","methodName","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","lotteryContract","getLotteryV2Contract","processViewLotterySuccessResponse","lotteryId","status","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","ethersToSerializedBigNumber","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","isLoading","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","getLotteryV2Address","multicallv2","lotteryV2Abi","requireSuccess","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","method","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","parseInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","push","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","getTokenLogoURL","StyledLogo","Logo","size","CurrencyLogo","uriLocations","useHttpLocations","WrappedTokenInfo","logoURI","srcs","alt","crow","isZero","hexNumberString","process","getItem","startLength","endLength","substring","isInitialized","hasRegistered","profileAvatars","fetchProfile","getProfile","profile","fetchProfileAvatar","getProfileAvatar","nft","fetchProfileUsername","username","getUsername","profileSlice","profileClear","addPoints","points","pending","rejected","meta","arg","usernameFetchStatus","ProfileAvatarFetchStatus","FETCHING","avatarFetchStatus","FETCHED","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","autoCompoundFrequency","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","p","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","Number","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","toNumber","MILLION","RoiCardWrapper","radii","default","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","toLocaleString","minimumFractionDigits","maximumFractionDigits","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","unit","switchEditingUnits","onFocus","lte","getBalanceNumber","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","resetUserNftState","walletconnect","close","uriToHttp","uri","substr","provider","ethereum","request","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","options","image","BASE_URL","tokenAdded","teamsList","accum","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","teamId","getTeam","fetchTeams","getTeams","teams","usePreviousValue","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Wrapper","Section","AutoColumn","ConfirmedIcon","ColumnCenter","ConfirmationPendingContent","pendingText","gap","justify","TransactionSubmittedContent","currencyToAdd","library","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","resolverContract","useENSResolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","equalTo","add","useAllCommonPairs","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","useUserSingleHopOnly","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","DEFAULT_META","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","useCakeBusdPrice","pageMeta","startsWith","getCustomMeta","pageTitle","property","Page","estimateGas","gasMarginPer10000","rawGasEstimation","gasEstimation","mul","callWithEstimateGas","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","DEFAULT_TOKEN_DECIMAL","wait","unstakeFarm","withdraw","harvestFarm","deposit","getActivePools","eligiblePools","pool","startBlockCalls","endBlockCalls","sousChefV2","startBlocks","endBlocks","poolCheck","startBlock","endBlock","gte","buySale","manager","buy","claimSale","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","target","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","useExpertModeManager","toggleExpertMode","isRememberChecked","setIsRememberChecked","maxWidth","userSelect","prompt","GasSettings","useGasPriceManager","setGasPrice","GAS_PRICE","instant","SettingsModal","showConfirmExpertModal","useUserExpertModeAcknowledgementShow","useAudioModeManager","pb","borderTop","TransactionSettings","GlobalSettings","useModal","onPresentSettingsModal","TransactionState","IconWrapper","success","failure","Transaction","CircleLoader","renderTransactions","TransactionsModal","sortedRecentTransactions","orderBy","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","expertMode","Link","show","BodyWrapper","AppBody","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","utils","hexlify","toUtf8Bytes","signPersonalMessage","getSigner","blockSlice","currentBlock","privatesales","seedsale","tempToken","pcrow","privatesale","preSale","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","urls","url","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","Contract","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","ChainId","MAINNET","sendDispatch","requestId","nanoid","fetchTokenList","then","tokenList","catch","errorMessage","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","align","inputRegex","Input","React","nextUserInput","escapeRegExp","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","Row","cursor","className","val","currency0","currency1","margin","marginRight","slice","transformProfileResponse","profileResponse","userId","numberPoints","collectionAddress","tokenId","isActive","profileContract","getProfileContract","getUserProfile","getNftApi","apiRes","collectionName","collection","attributes","createdAt","updatedAt","original","thumbnail","nftToken","Cookies","avatar","domain","secure","expires","campaigns","badge","campaignMap","campaign","filterTokens","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","every","sp","endsWith","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubstrings","trim","web3React","refEth","setProvider","Dots","span","images","md","ipfs","IPFS_GATEWAY","textColor","users","useTotalSupply","useTokenContract","totalSupply","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","getPancakeProfileAddress","profileABI","teamData","onChainTeamData","useUserAddedTokens","serializedTokensMap","user","mx","useFetchProfile","useProfileForAddress","profileState","setProfileState","hasAddressChanged","fetchProfileForAddress","useAchievementsForAddress","achievements","getAchievements","useProfile","hasProfile","useGetProfileAvatar","initialNftFilterState","loadingState","NftFilterLoadingState","IDLE","activeFilters","showOnlyOnSale","ordering","direction","initializationState","NFTMarketInitializationState","UNINITIALIZED","nfts","filters","isUpdatingPancakeBunnies","latestPancakeBunniesUpdateAt","userNftsInitializationState","UserNftInitializationState","activity","askOrderHistory","buyTradeHistory","sellTradeHistory","fetchCollections","getCollectionsApi","getCollectionsSg","collectionsMarket","combineCollectionData","fetchCollection","getCollectionApi","getCollectionSg","collectionMarket","fetchNftsFromCollections","page","getNftsFromCollectionApi","tokenIds","getMarketDataForTokenIds","nftsMarket","apiMetadata","marketData","filterNftsFromCollection","nftFilters","attrParams","attr","traitType","isEmpty","fetchNftsFiltered","attrFilters","apiToken","getNftsMarketData","tokenId_in","nftTokens","apiTokenMarketData","tokenMarketData","fetchNewPBAndUpdateExisting","bunnyId","existingTokensWithBunnyId","allExistingPBTokenIds","existingMetadata","orderDirection","updatedNfts","updatedNftsMarket","updatedTokens","getMetadataWithFallback","otherId","getPancakeBunniesAttributesField","combineApiAndSgResponseToNftToken","newNfts","getNftsByBunnyIdSg","moreTokensWithRequestedBunnyId","fetchUserNfts","profileNftWithCollectionAddress","getCompleteAccountNftData","completeNftData","updateUserNft","location","NftLocation","WALLET","marketDataForNft","getNftsFromDifferentCollectionsApi","metadataForNft","removeUserNft","addUserNft","nftLocation","fetchUserActivity","getUserActivity","toLocaleLowerCase","userActivity","NftMarket","addAttributeFilter","attribute","removeAttributeFilter","attributeKey","removeAllFilters","setOrdering","setShowOnlyOnSale","INITIALIZED","existingNftsWithoutNewOnes","newToken","now","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","copyOfState","nftToRemove","splice","resetMintState","setStateLastUpdated","previousLastUpdated","getImageUrlFromToken","wbnb","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","flexGrow","xs","RowBetween","AutoRow","RowFixed","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","history","createBrowserHistory","ethersBn","ethersToBigNumber","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","dkt","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","kalm","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","useTransactionDeadline","userDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","pendingReward","transformPool","totalStaked","stakingLimit","getTokenPricesFromFarm","prices","quoteTokenAddress","getUserPointIncreaseEvents","GRAPH_API_PROFILE","gql","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","claimed","totalTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","getGraphLotteryUser","first","skip","where","blankUser","totalCake","rounds","GRAPH_API_LOTTERY","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","ERC20_ABI","ERC20_BYTES32_ABI","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","concat","UnsupportedCurrencyFooter","onPresentModal","TESTNET","CRONOSTESTNET","mainnetTokens","bnb","dai","ust","busd","usdt","btcb","eth","syrup","babycake","spy","testnetTokens","cronosTestTokens","crow1","crow2","msc","unserializedTokens","serializeToken","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","useAddUserToken","inactiveTokenList","useCombinedInactiveList","list","gridGap","maxAmountSpend","currencyAmount","greaterThan","MIN_BNB","ens","resolvedContentHash","useENSContentHash","getMulticallAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","getDecimalAmount","dividedBy","getFullDisplayBalance","displayDecimals","formatNumber","number","minPrecision","maxPrecision","formatBigNumber","remainder","mod","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","leftSide","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","claimableCampaignId","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","x","AchievementFetchStatus","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","Column","ZERO","useMintState","mint","ConfirmAddModalBottom","noLiquidity","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_A","CURRENCY_B","PoolPriceBar","assetA","assetB","ONE_BIPS","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","WETH","useIsExpertMode","otherTypedValue","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","wrappedCurrencyAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","deadline","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","useApproveCallback","ROUTER_ADDRESS","approvalA","approveACallback","approvalB","approveBCallback","router","getRouterContract","parsedAmountA","parsedAmountB","calculateSlippageAmount","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","calculateGasMargin","err","modalHeader","slippage","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","ApprovalState","NOT_APPROVED","APPROVED","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentEpoch","intervalSeconds","minBetAmount","bufferSeconds","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","ledgers","claimableStatuses","leaderboard","selectedAddress","timePeriod","hasMoreResults","addressResults","initializePredictions","getPredictionData","epochs","range","getRoundsData","roundsResponse","initialRoundData","roundResponse","reduxNodeRound","serializePredictionsRoundsResponse","epoch","initializedData","getLedgerData","ledgerResponses","getClaimStatuses","makeLedgerData","fetchRound","predictionContract","getPredictionsContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","getBetHistory","bets","transformBetResponse","fetchNodeHistory","fetchUsersRoundsLength","userRoundsLength","emptyResult","maxPages","ceil","fetchUserRounds","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","closePrice","lockPrice","position","claimedAt","claimedHash","claimedBNB","claimedNetBNB","failed","startAt","startTimestamp","startHash","lockAt","lockTimestamp","lockBlock","lockHash","lockRoundId","lockOracleId","closeRoundId","closeOracleId","closeHash","closeAt","closeBlock","totalBets","totalAmount","bullBets","bullAmount","bearBets","bearAmount","HOUSE","BULL","BEAR","filterLeaderboard","getPredictionUsers","totalBets_gte","usersResponse","transformUserResponse","fetchAddressResult","rejectWithValue","getPredictionUser","userResponse","filterNextPageLeaderboard","getState","predictions","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","setSelectedAddress","LEADERBOARD_RESULTS_PER_PAGE","newestRound","maxBy","futureRound","makeFutureRoundResponse","futureRounds","currentRound","makeRoundData","BUSD_MAINNET","WBNB","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","ethBusdPrice","currencyEthPrice","busdPrice","useBNBBusdPrice","PageLoader","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","Outer","Inner","PageHeader","BASE_BSC_SCAN_URLS","getBscScanLinkForNft","num","divide","getContract","ABI","AddressZero","connectUnchecked","getProviderOrSigner","_","IUniswapV2Router02ABI","string","isTokenOnList","defaultTokens","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","defaultOptionIndex","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","FixedHeightRow","MinimalPositionCard","unwrappedToken","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","BIG_INT_ZERO","fetchPrivateSale","sale","contactAddress","presaleABI","presaleTokenPrice","claimStartTime","claimEndTime","stagesInfo","claimDays","day","claimPercents","percent","startDate","endDate","claimStartDate","claimEndDate","fetchPublicPrivateSaleData","salePublicData","fetchPrivateSales","salesToFetch","saleConfig","serializedSale","fetchPrivateSaleTempTokenUserAllowances","parsedAllowances","fetchPrivateSaleQuoteTokenUserAllowances","fetchPrivateSaleUserTally","fetchPrivateSaleUserClaimed","fetchPrivateSaleUserClaimable","salesConfig","tempAllowance","quoteAllowance","purchasedBalance","claimedBalance","claimableBalance","loadArchivedData","fetchPrivateSalesPublicDataAsync","privatesaleConfig","sales","fetchPrivateSalesUserDataAsync","quoteAllowances","tempAllowances","userTally","userClaimed","userClaimable","tally","privatesalesSlice","setLoadArchivedPrivateSalesData","livePrivateSaleData","privatesaleData","getProposals","ACTIVE","SNAPSHOT_API","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","SNAPSHOT_VOTING_API","headers","body","stringify","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","voting","votingSlice","_inValid","achievementFetchStatus","fetchAchievements","achievementSlice","addAchievement","clearAchievements","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","Loading","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIPS_BASE","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","exponentiate","BLOCKED_ADDRESSES","abi","signer","signerOrProvider","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","BINANCE","sousChefBnb","sousChef","getSouschefV2Contract","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getUSDCContract","getPrivateSaleContract","privateSaleAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","getAnniversaryAchievementContract","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","getNftSaleContract","nftSaleAbi","getPancakeSquadContract","pancakeSquadAbi","getErc721CollectionContract","erc721CollctionAbi","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","getPoolApr","rewardTokenPrice","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","NaN","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","Balance","isDisabled","prefix","previousValue","start","end","suffix","duration","separator","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","entry","rootMargin","threshold","observe","disconnect","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","useIfoV1Contract","useIfoV2Contract","useERC20","useCake","usePrivateSaleManager","useBunnyFactory","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useNftSaleContract","useFarmAuctionContract","useNftMarketContract","useErc721CollectionContract","useContract","withSignerIfPossible","useWETHContract","WETH_ABI","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","usePairContract","pairAddress","multiCallAbi","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","useIsUserAddedToken","useIsTokenActive","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","useCombinedActiveList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","inactiveTokens","useAllInactiveTokens","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","useToken","searchTokenIsAdded","audioPlay","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","useFoundOnInactiveList","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","lists","byUrl","pendingUpdate","useIsListActive","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","confirm","removeList","handleEnableList","enableList","handleDisableList","disableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","useAllLists","activeListUrls","useActiveListUrls","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","UNSUPPORTED_LIST_URLS","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","userAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","loadingRequestId","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","toggleSetAudioMode","userExpertMode","toggleSetExpertMode","toggleThemeAction","userSingleHopOnly","newSingleHopOnly","useUserFarmStakedOnly","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","userExpertModeAcknowledgementShow","showAcknowledgement","serializedToken","serializePair","usePairAdder","serializedPair","toV2LiquidityToken","useTrackedTokenPairs","pinnedPairs","generatedPairs","savedSerializedPairs","userPairs","forChain","pairId","combinedList","keyed","sorted","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","multi","itf","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","GRAPH_API_PREDICTION","SNAPSHOT_BASE_URL","API_PROFILE","API_NFT","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","GRAPH_API_NFTMARKET","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BASE_ADD_LIQUIDITY_URL","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","PANCAKE_BUNNIES_UPDATE_FREQUENCY","projectLink","testnet","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","useTokensFromMap","tokenMap","includeUserAdded","mapWithoutUrls","newMap","tokenMap_","activeTokensAddresses","useUnsupportedTokenList","activeTokens","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","arrayify","parseBytes32String","tokenContract","tokenContractBytes32","tokenName","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","isBNB","DoubleCurrencyLogo","StyledListLogo","ListLogo","Result","numberOrNull","valueNum","betResponse","bet","claimedBlock","transformRoundResponse","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","positionResponse","getRoundResult","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ledgerCalls","defaultPredictionUserOptions","orderDir","claimableCalls","claimableResponses","claimableResponse","claimable","staticCalls","paused","PAUSED","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","serializePredictionsLedgerResponse","ledgerResponse","parseBigNumberObj","getUserRoundsLength","getUserRounds","isMethodArg","isValidMethodArgs","Array","isArray","xi","INVALID_RESULT","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","c","callKeys","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","callInputs","interface","getFunction","isPBCollection","requestPath","promises","responses","resp","existingTokenIds","isTradable","tokenId_not_in","getAllPancakeBunniesLowestPrice","bunnyIds","singlePancakeBunnySubQueries","rawResponse","lowestPricesData","subQueryKey","currentAskPrice","getAllPancakeBunniesRecentUpdatedAt","updatedAtData","getLowestPriceInCollection","nftSg","getLatestListedNfts","displayType","fetchWalletTokenIdsForCollections","walletNftPromises","balanceOfResponse","getTokenId","tokenOfOwnerByIndex","tokenIdBn","tokenIdPromises","tokensWithCollectionAddress","walletNfts","flat","collectionApiData","collectionSgData","collectionsMarketObj","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketNft","metadataUrl","transactionHistory","currentSeller","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","PROFILE","FORSALE","getNftLocationForMarketNft","walletNftIdsWithCollectionAddress","unshift","uniqueCollectionAddresses","uniq","walletNftId","walletNftsByCollection","idWithCollectionAddress","walletMarketDataRequests","walletNftByCollection","tokenIdIn","walletMarketDataResponses","walletMarketData","walletNftsWithMarketData","walletTokenIds","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","getCollectionDistributionApi","useTokenAllowance","owner","amountToApprove","currentAllowance","pendingApproval","approvalState","UNKNOWN","approve","useExact","MaxUint256","estimatedGas","useApproveCallbackFromTrade","protocol","overview","chartData","byAddress","createReducer","protocolData","poolData","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","timestamp","TABLE","userUsernameVisibility","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","tokenWatchlist","newTokens","poolsWatchlist","newPools","txs","lastCheckedBlockNumber","confirmedTime","otherField","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","getVersionUpgrade","VersionUpgrade","NONE","addList","u","lastInitializedSet","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","fetchingBlockNumber","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","privatesalesReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","votingReducer","lotteryReducer","infoReducer","nftMarket","nftMarketReducer","burn","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","AskOrderType","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","tagId","combineMaps","map1","map2","useCombinedTokenMapFromUrls","currentUrl","assign","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCrow","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","lastDepositedTime","lastUserActionTime","cakeVault","fees","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useUserAgent","documentElement","setAttribute","navigator","userAgent","useScrollOnRouteChange","unlisten","listen","scroll","left","behavior","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","crowBalance","crowFetchStatus","fontWeight","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","WalletModal","initialView","WALLET_INFO","view","WalletUserMenuItem","onPresentWalletModal","UserMenu","TRANSACTIONS","avatarSrc","getActiveSubMenuItem","menuItem","activeSubMenuItems","subMenuItem","subMenuItem1","subMenuItem2","Menu","activeMenuItem","menuConfig","getActiveMenuItem","userMenu","currentLang","langs","setLang","links","footerLinks","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","spin","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","useFetchUserPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","bondly","safemoon","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","PrivateSales","FarmAuction","Lottery","Ifos","NotFound","Teams","Team","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","ProfileCreation","PancakeSquad","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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JE,KAAM,MACND,MAAO,QACPspC,MAAO,eAET,CACEvpC,GAAI,YACJE,KAAM,MACND,MAAO,UACPspC,MAAO,iBAET,CACEvpC,GAAI,YACJE,KAAM,MACND,MAAO,SACPspC,MAAO,kBAET,CACEvpC,GAAI,YACJE,KAAM,MACND,MAAO,QACPspC,MAAO,eAET,CACEvpC,GAAI,YACJE,KAAM,MACND,MAAO,QACPspC,MAAO,iBAET,CACEvpC,GAAI,YACJE,KAAM,MACND,MAAO,QACPspC,MAAO,eAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,wBACPspC,MAAO,4BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,uBACPspC,MAAO,2BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,uBACPspC,MAAO,2BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,uBACPspC,MAAO,2BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,2BACPspC,MAAO,+BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,0BACPspC,MAAO,8BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,yBACPspC,MAAO,6BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,yBACPspC,MAAO,6BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,yBACPspC,MAAO,6BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,6BACPspC,MAAO,iCAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,0BACPspC,MAAO,8BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,yBACPspC,MAAO,6BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,yBACPspC,MAAO,6BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,yBACPspC,MAAO,6BAET,CACEvpC,GAAI,YACJE,KAAM,aACND,MAAO,6BACPspC,MAAO,iCAET,CACEvpC,GAAI,YACJE,KAAM,gBACND,MAAO,eACP7G,YAAa,qDACbmwC,MAAO,oBAET,CA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","file":"static/js/main.a669e1d8.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { String } from 'lodash'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n  338?: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n\nexport enum PrivateSaleType {\n  seedsale = 'seedSale',\n  privatesale = 'privateSale',\n  preSale = 'presSale',\n}\n\nexport interface PrivateSaleBaseProps {\n  type: PrivateSaleType\n  manager: Address,\n  price: number\n  name: string\n}\nexport interface SerializedPrivateSaleConfig extends PrivateSaleBaseProps {\n  tempToken: SerializedToken\n  quoteToken: SerializedToken\n  startDate?: number\n  endDate?: number\n  claimStartDate?: number\n  claimEndDate?: number\n  claimDays?: number[]\n  claimPercents?: number[]\n}\nexport interface DeserializedPrivateSaleConfig extends PrivateSaleBaseProps {\n  tempToken: Token\n  quoteToken: Token\n  startDate?: Date\n  endDate?: Date\n  claimStartDate?: Date\n  claimEndDate?: Date\n  claimDays?: number[]\n  claimPercents?: number[]\n}","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '0x65e5cB1992C1E5878c4EFDd465051D4e946Ab403',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  }\n]\n\nexport default pools","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Address } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n  SQUAD = 'pancakeSquad',\n}\n\nexport type Collection = {\n  name: string\n  description?: string\n  slug: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    slug: 'pancake-bunnies',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n  [CollectionKey.SQUAD]: {\n    name: 'Pancake Squad',\n    description: \"PancakeSwap's first official generative NFT collection.. Join the squad.\",\n    slug: 'pancake-squad',\n    address: {\n      56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n    },\n  },\n}\n\nexport default collections\n","import collections from 'config/constants/nftsCollections'\nimport { CollectionKey } from 'config/constants/nftsCollections/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const nftsBaseUrl = '/nfts'\nexport const pancakeBunniesAddress = getAddress(collections[CollectionKey.PANCAKE].address)\nexport const pancakeSquadAddress = getAddress(collections[CollectionKey.SQUAD].address)\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.StaticJsonRpcProvider(RPC_URL)\n\nexport default null\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n    harvestInterval: farm.harvestInterval ? new BigNumber(farm.harvestInterval) : BIG_ZERO,\n    crowPerBlock: farm.crowPerBlock ? new BigNumber(farm.crowPerBlock) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 1 = SPY-BNB LP\n * 3 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([2, 3]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on Explorer')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = (refreshTime = 6000) => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, refreshTime)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible, refreshTime])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  return GAS_PRICE_GWEI.cronos;\n  // const chainId = process.env.REACT_APP_CHAIN_ID\n  // const state = store.getState()\n  // const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  // return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Language } from '@pancakeswap/uikit'\n\n// export const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\n// export const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\n// export const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\n// export const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\n// export const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\n// export const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\n// export const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\n// export const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\n// export const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\n// export const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\n// export const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\n// export const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\n// export const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\n// export const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\n// export const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\n// export const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\n// export const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\n// export const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\n// export const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\n// export const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\n// export const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\n// export const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  // 'ar-SA': AR,\n  // 'bn-BD': BN,\n  'en-US': EN,\n  'id-ID': ID,\n  // 'de-DE': DE,\n  // 'el-GR': EL,\n  // 'es-ES': ESES,\n  // 'fi-FI': FI,\n  // 'fil-PH': FIL,\n  // 'fr-FR': FR,\n  'hi-IN': HI,\n  // 'hu-HU': HU,\n  // 'it-IT': IT,\n  // 'ja-JP': JA,\n  // 'ko-KR': KO,\n  // 'nl-NL': NL,\n  // 'pl-PL': PL,\n  // 'pt-BR': PTBR,\n  // 'pt-PT': PTPT,\n  // 'ro-RO': RO,\n  // 'ru-RU': RU,\n  // 'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  // 'uk-UA': UK,\n  // 'vi-VN': VI,\n  'zh-CN': ZHCN,\n  // 'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(walletBalance)\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n  crowPerBlock: SerializedBigNumber\n  harvestInterval: SerializedBigNumber\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint, crowPerBlock] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'crowPerBlock',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : \n  BIG_ZERO\n  const harvestInterval = info ? new BigNumber(info.harvestInterval?._hex) : BIG_ZERO\n  const crowPerBlockBN = crowPerBlock ? new BigNumber(crowPerBlock) : BIG_ZERO\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n    harvestInterval: harvestInterval.toJSON(),\n    crowPerBlock: crowPerBlockBN.toJSON()\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm } from 'state/types'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['USDC', 'WCRO'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport interface TokenInfoResponse {\n  data: TokenInfo\n}\n\n/* eslint-disable camelcase */\nexport interface TokenInfo {\n  price: string,\n  price_BNB: string,\n  name: string,\n  symbol: string\n}\n\nexport const getBNBPriceUSD = async (\n): Promise<BigNumber> => {\n  try {\n    const res = await fetch(`https://api.pancakeswap.info/api/v2/tokens/0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56`)\n\n    if (res.ok) {\n      try {\n        const data:TokenInfoResponse = await res.json()\n        return BIG_ONE.div(new BigNumber(data.data.price_BNB));\n      } catch (e) {\n        return BIG_ZERO;\n      }\n    }\n  } catch (_) {\n    const hardcodedJson = `{\"updated_at\":1639041391172,\"data\":{\"name\":\"BUSD Token\",\"symbol\":\"BUSD\",\"price\":\"0.999705860394396670805082377575\",\"price_BNB\":\"0.001681418294899835487339371856298\"}}`;\n    try {\n      const data:TokenInfoResponse = JSON.parse(hardcodedJson)\n      return BIG_ONE.div(new BigNumber(data.data.price_BNB));\n    } catch (e) {\n      return BIG_ZERO;\n    }\n  }\n  \n  return BIG_ZERO;\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken, getBNBPriceUSD } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.usdc.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wcro.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wcro.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.usdc.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'USDC') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WCRO') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WCRO') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDC') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 3)\n  let bnbPriceBusd = bnbBusdFarm && bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  if (bnbPriceBusd.eq(BIG_ZERO)) {\n    bnbPriceBusd = await getBNBPriceUSD()\n  }\n\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCrow',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    const farms = await fetchFarms(farmsToFetch)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? ETHER.symbol : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === ETHER.symbol) return ETHER.symbol\n    if (valid === false) return ETHER.symbol\n  }\n  return ETHER.symbol ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  // if (currency === ETHER) {\n  //   return <BinanceIcon width={size} style={style} />\n  // }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 1, 3) should always be at the top of the file.\n   */\n   {\n    pid: 1,\n    lpSymbol: 'USDC-CROW LP',\n    lpAddresses: {\n      97: '0xe9412a9809FadBbaCd8D1bd024E6280f05Bd2437',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      338: '0x360402fEC9663d19A60646E057129AD71722F173',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.crow,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'CROW-CRO LP',\n    lpAddresses: {\n      97: '0xe890519b297700BB69a62F18AaA50cAc201A300C',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n      338: '0x50FEEEc566A9DFF6E012A970934b9b5B296F2191'\n    },\n    token: serializedTokens.crow,\n    quoteToken: serializedTokens.wcro,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'USDC-CRO LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n      338: '0xfdc06C084f62109fe23566cf26a2c8aCe9a7Aa90',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.wcro,\n  }\n]\n\nexport default farms","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState, ProfileAvatarFetchStatus, Profile } from 'state/types'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getProfile, getProfileAvatar, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfile = createAsyncThunk<{ hasRegistered: boolean; profile?: Profile }, string>(\n  'profile/fetchProfile',\n  async (account) => {\n    const { hasRegistered, profile } = await getProfile(account)\n    return { hasRegistered, profile }\n  },\n)\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const { nft, hasRegistered } = await getProfileAvatar(account)\n    return { account, nft, hasRegistered }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<\n  { account: string; username: string },\n  { account: string; hasRegistered: boolean }\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\n  if (!hasRegistered) {\n    return { account, username: '' }\n  }\n  const username = await getUsername(account)\n  return { account, username }\n})\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfile.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchProfile.fulfilled, (state, action) => {\n      const { hasRegistered, profile } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    })\n    builder.addCase(fetchProfile.rejected, (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    })\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: null,\n          nft: null,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username,\n          nft: null,\n          hasRegistered: true,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username: '',\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: '',\n          nft: null,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\n      const account = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft, hasRegistered } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n          hasRegistered,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft,\n          hasRegistered,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\n      const account = action.meta.arg\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft: null,\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileClear, addPoints } = profileSlice.actions\n\nexport default profileSlice.reducer\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(166.77deg,#ebf5f7 0%,#ebf5f7 100%);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { resetUserNftState } from '../state/nftMarket/reducer'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    dispatch(resetUserNftState())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return ETHER.symbol\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      {/* <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon> */}\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on Explorer')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Crow Finance',\n  description:\n    'CrowFi - Crow Finance is a One-Stop-DeFi-Shop! The ultimate Cross-Chain DEX of the Cronos Network. We provide you with tools to invest, trade & earn with ease.',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  let basePath\n  if (path.startsWith('/swap')) {\n    basePath = '/swap'\n  } else if (path.startsWith('/add')) {\n    basePath = '/add'\n  } else if (path.startsWith('/remove')) {\n    basePath = '/remove'\n  } else if (path.startsWith('/teams')) {\n    basePath = '/teams'\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\n    basePath = '/voting/proposal'\n  } else if (path.startsWith('/nfts/collections')) {\n    basePath = '/nfts/collections'\n  } else if (path.startsWith('/nfts/profile')) {\n    basePath = '/nfts/profile'\n  } else if (path.startsWith('/pancake-squad')) {\n    basePath = '/pancake-squad'\n  } else {\n    basePath = path\n  }\n\n  switch (basePath) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('CrowFi')}`,\n      }\n    case '/swap':\n      return {\n        title: `${t('Exchange')} | ${t('CrowFi')}`,\n      }\n    case '/add':\n      return {\n        title: `${t('Add Liquidity')} | ${t('CrowFi')}`,\n      }\n    case '/remove':\n      return {\n        title: `${t('Remove Liquidity')} | ${t('CrowFi')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Liquidity')} | ${t('CrowFi')}`,\n      }\n    case '/find':\n      return {\n        title: `${t('Import Pool')} | ${t('CrowFi')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('CrowFi')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('CrowFi')}`,\n      }\n    case '/prediction/leaderboard':\n      return {\n        title: `${t('Leaderboard')} | ${t('CrowFi')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('CrowFi')}`,\n      }\n    case '/farms/auction':\n      return {\n        title: `${t('Farm Auctions')} | ${t('CrowFi')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('CrowFi')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('CrowFi')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('CrowFi')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('CrowFi')}`,\n      }\n    case '/voting':\n      return {\n        title: `${t('Voting')} | ${t('CrowFi')}`,\n      }\n    case '/voting/proposal':\n      return {\n        title: `${t('Proposals')} | ${t('CrowFi')}`,\n      }\n    case '/voting/proposal/create':\n      return {\n        title: `${t('Make a Proposal')} | ${t('CrowFi')}`,\n      }\n    case '/info':\n      return {\n        title: `${t('Overview')} | ${t('CrowFi Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/pools':\n      return {\n        title: `${t('Pools')} | ${t('CrowFi Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/tokens':\n      return {\n        title: `${t('Tokens')} | ${t('CrowFi Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/nfts':\n      return {\n        title: `${t('Overview')} | ${t('CrowFi')}`,\n      }\n    case '/nfts/collections':\n      return {\n        title: `${t('Collections')} | ${t('CrowFi')}`,\n      }\n    case '/nfts/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('CrowFi')}`,\n      }\n    case '/pancake-squad':\n      return {\n        title: `${t('Pancake Squad')} | ${t('CrowFi')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = useCakeBusdPrice()\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  // let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n  let pageTitle = cakePriceUsdDisplay ? title : title\n  if (symbol) {\n    // pageTitle = [symbol, title].join(' - ')\n    pageTitle = title\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\nimport { callWithEstimateGas } from 'utils/calls/estimateGas'\nimport { AddressZero } from '@ethersproject/constants'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  // const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  // const rawGasEstimation = await masterChefContract.estimateGas['deposit'](pid, value)\n  // const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n\n  const tx = await callWithEstimateGas(masterChefContract, 'deposit', [pid, value], {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\nimport { AddressZero } from '@ethersproject/constants'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const buySale = async (manager, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await manager.buy(value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const claimSale = async (manager, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  const tx = await manager.claim(value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.cronos)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.cronos ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.cronos })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps, ThemeSwitcher } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\nconst ScrollableContainer = styled(Flex)`\n  flex-direction: column;\n  max-height: 400px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme, isDark, toggleTheme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px' }}\n    >\n      <ScrollableContainer>\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          {/* <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <Flex justifyContent=\"space-between\">\n            <Text mb=\"24px\">{t('Dark mode')}</Text>\n            <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\n          </Flex> */}\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        {/* <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n        </Flex> */}\n      </ScrollableContainer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={24} width={24} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { orderBy } from 'lodash'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = orderBy(\n    Object.values(allTransactions).filter(isTransactionRecent),\n    'addedTime',\n    'desc',\n  )\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3)\n) {\n  throw Error('One base RPC URL is undefined')\n}\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  // Use custom node if available (both for development and production)\n  // However on the testnet it wouldn't work, so if on testnet - comment out the REACT_APP_NODE_PRODUCTION from env file\n  if (process.env.REACT_APP_NODE_PRODUCTION) {\n    return process.env.REACT_APP_NODE_PRODUCTION\n  }\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { serializeTokens } from './tokens'\nimport { PrivateSaleType, SerializedPrivateSaleConfig } from './types'\n\nconst serializedTokens = serializeTokens()\nconst privatesales: SerializedPrivateSaleConfig[] = [\n    {\n        type: PrivateSaleType.seedsale,\n        name: 'Seed Sale',\n        price: 0.01,\n        manager: {\n            97: '0xFB45aF3Fe47334e8c3c1F6EaA8e9a1E17Df30f11',\n            56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n            338: '0xd343aE7540B92fE01688c37C8CCa19eaDcc32F76',\n        },\n        tempToken: serializedTokens.pcrow,\n        quoteToken: serializedTokens.usdc\n    },\n    {\n        type: PrivateSaleType.privatesale,\n        name: 'Private Sale',\n        price: 0.015,\n        manager: {\n            97: '0x3b6d2c589a778FA053d1a4730895009d67BAa8DC',\n            56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n            338: '0xEB01b7f68035BFbCa7095410e4DE8385e9C53FE5',\n        },\n        tempToken: serializedTokens.pcrow,\n        quoteToken: serializedTokens.usdc\n    },\n    {\n        type: PrivateSaleType.preSale,\n        name: 'Pre Sale',\n        price: 0.018,\n        manager: {\n            97: '0x83Fe700A857d41DEA8FE340295Ce1c5e01350225',\n            56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n            338: '0xdEd4fb33637Cf5330e09a71ac410993651dcC65F',\n        },\n        tempToken: serializedTokens.pcrow,\n        quoteToken: serializedTokens.usdc\n    }\n]\n\nexport default privatesales","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { getTeam } from 'state/teams/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getNftApi } from 'state/nftMarket/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    collectionAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n\n    let nft = null\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nft = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n    }\n\n    return { nft, hasRegistered }\n  } catch {\n    return { nft: null, hasRegistered: false }\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n    let nftToken: NftToken\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nftToken = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `${nftToken.image.thumbnail}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      collectionAddress,\n      isActive,\n      nft: nftToken,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n  {\n    id: '516010001',\n    type: 'participation',\n    title: '1 Year',\n    description: 'Joined PancakeSwap during the first year of our journey!',\n    badge: '1-year.svg',\n  },\n  {\n    id: '511120000',\n    type: 'ifo',\n    title: 'Duelist King',\n    badge: 'ifo-dkt.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubstrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> substring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubstrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubstrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport isEmpty from 'lodash/isEmpty'\nimport {\n  getNftsFromCollectionApi,\n  getNftsMarketData,\n  getCollectionsApi,\n  getCollectionsSg,\n  getUserActivity,\n  combineCollectionData,\n  getCollectionSg,\n  getCollectionApi,\n  getNftsFromDifferentCollectionsApi,\n  getCompleteAccountNftData,\n  getNftsByBunnyIdSg,\n  getMarketDataForTokenIds,\n  getMetadataWithFallback,\n  getPancakeBunniesAttributesField,\n  combineApiAndSgResponseToNftToken,\n  fetchNftsFiltered,\n} from './helpers'\nimport {\n  State,\n  Collection,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NFTMarketInitializationState,\n  UserNftInitializationState,\n  NftToken,\n  NftLocation,\n  ApiSingleTokenData,\n  NftAttribute,\n  NftFilterLoadingState,\n  NftFilter,\n} from './types'\n\nconst initialNftFilterState: NftFilter = {\n  loadingState: NftFilterLoadingState.IDLE,\n  activeFilters: {},\n  showOnlyOnSale: true,\n  ordering: {\n    field: 'currentAskPrice',\n    direction: 'asc',\n  },\n}\n\nconst initialState: State = {\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\n  data: {\n    collections: {},\n    nfts: {},\n    filters: {},\n    loadingState: {\n      isUpdatingPancakeBunnies: false,\n      latestPancakeBunniesUpdateAt: 0,\n    },\n    users: {},\n    user: {\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\n      nfts: [],\n      activity: {\n        initializationState: UserNftInitializationState.UNINITIALIZED,\n        askOrderHistory: [],\n        buyTradeHistory: [],\n        sellTradeHistory: [],\n      },\n    },\n  },\n}\n\n/**\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\n  return combineCollectionData(collections, collectionsMarket)\n})\n\n/**\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\n  'nft/fetchCollection',\n  async (collectionAddress) => {\n    const [collection, collectionMarket] = await Promise.all([\n      getCollectionApi(collectionAddress),\n      getCollectionSg(collectionAddress),\n    ])\n\n    return combineCollectionData([collection], [collectionMarket])\n  },\n)\n\n/**\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\n * and the Subgraph (dynamic market data)\n * @param collectionAddress\n */\nexport const fetchNftsFromCollections = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; page: number; size: number }\n>('nft/fetchNftsFromCollections', async ({ collectionAddress, page, size }) => {\n  try {\n    if (collectionAddress === pancakeBunniesAddress) {\n      // PancakeBunnies don't need to pre-fetch \"all nfts\" from the collection\n      // When user visits IndividualNFTPage required nfts will be fetched via bunny id\n      return []\n    }\n\n    const nfts = await getNftsFromCollectionApi(collectionAddress, size, page)\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    const tokenIds = Object.values(nfts.data).map((nft) => nft.tokenId)\n    const nftsMarket = await getMarketDataForTokenIds(collectionAddress, tokenIds)\n\n    return tokenIds.map((id) => {\n      const apiMetadata = nfts.data[id]\n      const marketData = nftsMarket.find((nft) => nft.tokenId === id)\n\n      return {\n        tokenId: id,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress,\n        image: apiMetadata.image,\n        attributes: apiMetadata.attributes,\n        marketData,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\n    return []\n  }\n})\n\nexport const filterNftsFromCollection = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; nftFilters: Record<string, NftAttribute> }\n>('nft/filterNftsFromCollection', async ({ collectionAddress, nftFilters }) => {\n  try {\n    const attrParams = Object.values(nftFilters).reduce(\n      (accum, attr) => ({\n        ...accum,\n        [attr.traitType]: attr.value,\n      }),\n      {},\n    )\n    if (isEmpty(attrParams)) {\n      return []\n    }\n    const attrFilters = await fetchNftsFiltered(collectionAddress, attrParams)\n\n    // Fetch market data for each token returned\n    const tokenIds = Object.values(attrFilters.data).map((apiToken) => apiToken.tokenId)\n    const marketData = await getNftsMarketData({ tokenId_in: tokenIds, collection: collectionAddress.toLowerCase() })\n\n    const nftTokens: NftToken[] = Object.values(attrFilters.data).map((apiToken) => {\n      const apiTokenMarketData = marketData.find((tokenMarketData) => tokenMarketData.tokenId === apiToken.tokenId)\n\n      return {\n        tokenId: apiToken.tokenId,\n        name: apiToken.name,\n        description: apiToken.description,\n        collectionName: apiToken.collection.name,\n        collectionAddress,\n        image: apiToken.image,\n        attributes: apiToken.attributes,\n        marketData: apiTokenMarketData,\n      }\n    })\n\n    return nftTokens\n  } catch {\n    return []\n  }\n})\n\n/**\n * This action keeps data on the individual PancakeBunny page up-to-date. Operation is a twofold\n * 1. Update existing NFTs in the state in case some were sold or got price modified\n * 2. Fetch 30 more NFTs with specified bunny id\n */\nexport const fetchNewPBAndUpdateExisting = createAsyncThunk<\n  NftToken[],\n  {\n    bunnyId: string\n    existingTokensWithBunnyId: string[]\n    allExistingPBTokenIds: string[]\n    existingMetadata: ApiSingleTokenData\n    orderDirection: 'asc' | 'desc'\n  }\n>(\n  'nft/fetchNewPBAndUpdateExisting',\n  async ({ bunnyId, existingTokensWithBunnyId, allExistingPBTokenIds, existingMetadata, orderDirection }) => {\n    try {\n      // 1. Update existing NFTs in the state in case some were sold or got price modified\n      const [updatedNfts, updatedNftsMarket] = await Promise.all([\n        getNftsFromCollectionApi(pancakeBunniesAddress),\n        getMarketDataForTokenIds(pancakeBunniesAddress, allExistingPBTokenIds),\n      ])\n\n      if (!updatedNfts?.data) {\n        return []\n      }\n      const updatedTokens = updatedNftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(updatedNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n\n      // 2. Fetch 30 more NFTs with specified bunny id\n      let newNfts = { data: { [bunnyId]: existingMetadata } }\n\n      if (!existingMetadata) {\n        newNfts = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      }\n      const nftsMarket = await getNftsByBunnyIdSg(bunnyId, existingTokensWithBunnyId, orderDirection)\n\n      if (!newNfts?.data) {\n        return updatedTokens\n      }\n\n      const moreTokensWithRequestedBunnyId = nftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(newNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n      return [...updatedTokens, ...moreTokensWithRequestedBunnyId]\n    } catch (error) {\n      console.error(`Failed to update PancakeBunnies NFTs`, error)\n      return []\n    }\n  },\n)\n\nexport const fetchUserNfts = createAsyncThunk<\n  NftToken[],\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\n  return completeNftData\n})\n\nexport const updateUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\n\n  return completeNftData\n})\n\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\n  'nft/removeUserNft',\n  async ({ tokenId }) => tokenId,\n)\n\nexport const addUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n\n  return {\n    ...metadataForNft[0],\n    location: nftLocation,\n    marketData: marketDataForNft[0],\n  }\n})\n\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\n  return userActivity\n})\n\nexport const NftMarket = createSlice({\n  name: 'NftMarket',\n  initialState,\n  reducers: {\n    addAttributeFilter: (state, action: PayloadAction<{ collection: string; attribute: NftAttribute }>) => {\n      if (state.data.filters[action.payload.collection]) {\n        state.data.filters[action.payload.collection].activeFilters = {\n          ...state.data.filters[action.payload.collection].activeFilters,\n          [action.payload.attribute.traitType]: action.payload.attribute,\n        }\n      } else {\n        state.data.filters[action.payload.collection] = {\n          ...initialNftFilterState,\n          activeFilters: {\n            ...state.data.filters[action.payload.collection].activeFilters,\n            [action.payload.attribute.traitType]: action.payload.attribute,\n          },\n        }\n      }\n    },\n    removeAttributeFilter: (state, action: PayloadAction<{ collection: string; attributeKey: string }>) => {\n      if (\n        state.data.filters[action.payload.collection] &&\n        state.data.filters[action.payload.collection].activeFilters[action.payload.attributeKey]\n      ) {\n        delete state.data.filters[action.payload.collection].activeFilters[action.payload.attributeKey]\n      }\n    },\n    removeAllFilters: (state, action: PayloadAction<string>) => {\n      state.data.filters[action.payload] = { ...initialNftFilterState }\n      state.data.nfts[action.payload] = []\n    },\n    setOrdering: (state, action: PayloadAction<{ collection: string; field: string; direction: 'asc' | 'desc' }>) => {\n      if (state.data.filters[action.payload.collection]) {\n        state.data.filters[action.payload.collection].ordering = {\n          field: action.payload.field,\n          direction: action.payload.direction,\n        }\n      } else {\n        state.data.filters[action.payload.collection] = {\n          ...initialNftFilterState,\n          ordering: {\n            field: action.payload.field,\n            direction: action.payload.direction,\n          },\n        }\n      }\n    },\n    setShowOnlyOnSale: (state, action: PayloadAction<{ collection: string; showOnlyOnSale: boolean }>) => {\n      if (state.data.filters[action.payload.collection]) {\n        state.data.filters[action.payload.collection].showOnlyOnSale = action.payload.showOnlyOnSale\n      } else {\n        state.data.filters[action.payload.collection] = {\n          ...initialNftFilterState,\n          showOnlyOnSale: action.payload.showOnlyOnSale,\n        }\n      }\n    },\n    resetUserNftState: (state) => {\n      state.data.user = { ...initialState.data.user }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(filterNftsFromCollection.pending, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      if (state.data.filters[collectionAddress]) {\n        state.data.filters[collectionAddress].loadingState = NftFilterLoadingState.LOADING\n      } else {\n        state.data.filters[collectionAddress] = {\n          ...initialNftFilterState,\n          loadingState: NftFilterLoadingState.LOADING,\n        }\n      }\n    })\n    builder.addCase(filterNftsFromCollection.fulfilled, (state, action) => {\n      const { collectionAddress, nftFilters } = action.meta.arg\n\n      state.data.filters[collectionAddress] = {\n        ...state.data.filters[collectionAddress],\n        loadingState: NftFilterLoadingState.IDLE,\n        activeFilters: nftFilters,\n      }\n      state.data.nfts[collectionAddress] = action.payload\n    })\n\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\n      state.data.collections = { ...state.data.collections, ...action.payload }\n    })\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.data.collections = action.payload\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\n    })\n    builder.addCase(fetchNftsFromCollections.pending, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      if (state.data.filters[collectionAddress]) {\n        state.data.filters[collectionAddress].loadingState = NftFilterLoadingState.LOADING\n      } else {\n        state.data.filters[collectionAddress] = {\n          ...initialNftFilterState,\n          loadingState: NftFilterLoadingState.LOADING,\n        }\n      }\n    })\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      const existingNfts: NftToken[] = state.data.nfts[collectionAddress] ?? []\n      const existingNftsWithoutNewOnes = existingNfts.filter(\n        (nftToken) => !action.payload.find((newToken) => newToken.tokenId === nftToken.tokenId),\n      )\n\n      state.data.filters[collectionAddress] = {\n        ...state.data.filters[collectionAddress],\n        loadingState: NftFilterLoadingState.IDLE,\n        activeFilters: {},\n      }\n      state.data.nfts[collectionAddress] = [...existingNftsWithoutNewOnes, ...action.payload]\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.pending, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = true\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.fulfilled, (state, action) => {\n      if (action.payload.length > 0) {\n        state.data.nfts[pancakeBunniesAddress] = action.payload\n      }\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.rejected, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchUserNfts.rejected, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserNfts.pending, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\n    })\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\n      state.data.user.nfts = action.payload\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\n    })\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\n      const userNftsState: NftToken[] = state.data.user.nfts\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\n      const indexInState = userNftsState.indexOf(nftToUpdate)\n      state.data.user.nfts[indexInState] = action.payload\n    })\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\n      const indexInState = copyOfState.indexOf(nftToRemove)\n      copyOfState.splice(indexInState, 1)\n      state.data.user.nfts = copyOfState\n    })\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\n    })\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\n    })\n    builder.addCase(fetchUserActivity.rejected, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserActivity.pending, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\n    })\n  },\n})\n\n// Actions\nexport const {\n  addAttributeFilter,\n  removeAttributeFilter,\n  removeAllFilters,\n  setOrdering,\n  setShowOnlyOnSale,\n  resetUserNftState,\n} = NftMarket.actions\n\nexport default NftMarket.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        {/* <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n            {t('V1 (old)')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n        <LinkExternal\n          id=\"ercBridge\"\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal> */}\n      </Flex>\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        {/* <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://docs.pancakeswap.finance/products/pancakeswap-exchange\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} /> */}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>\n        {children}\n        <Flex flexGrow={1} />\n        <Footer />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { Token, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbLpToken = new Token(chainId, farms[1].lpAddresses[chainId], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  {\n    id: 'dkt',\n    address: '0x89ab9852155A794e371095d863aEAa2DF198067C',\n    isActive: true,\n    name: 'Duelist King (DKT)',\n    poolBasic: {\n      saleAmount: '75,000 DKT',\n      raiseAmount: '$131,250',\n      cakeToBurn: '$65,625',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '175,000 DKT',\n      raiseAmount: '$306,250',\n      cakeToBurn: '$153,125',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.dkt,\n    releaseBlockNumber: 12130750,\n    campaignId: '511120000',\n    articleUrl: 'https://pancakeswap.finance/voting/proposal/QmTRWdW9a65fAkyJy1wrAJRU548fNMAZhRUDrSxzMDLmwk',\n    tokenOfferingPrice: 1.75,\n    version: 2,\n  },\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: false,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET, CRONOSTESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  \n  wbnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB', 'https://www.binance.com/'),\n  \n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  cake: new Token(MAINNET, '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', 18, 'CAKE', 'PancakeSwap Token', ''),\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  busd: new Token(MAINNET, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56', 18, 'BUSD', 'Binance USD', 'https://www.paxos.com/busd/'),\n  usdt: new Token(MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD', 'https://tether.to/'),\n  btcb: new Token(MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC', 'https://bitcoin.org/'),\n  eth: new Token(MAINNET, '0x2170Ed0880ac9A755fd29B2688956BD959F933F8', 18, 'ETH', 'Binance-Peg Ethereum Token', 'https://ethereum.org/en/'),\n  usdc: new Token(MAINNET, '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d', 18, 'USDC', 'Binance-Peg USD Coin', 'https://www.centre.io/usdc'),\n  syrup: new Token(MAINNET, '0x009cF7bC57584b7998236eff51b98A168DceA9B0', 18, 'SYRUP', 'SyrupBar Token', 'https://pancakeswap.finance/'),\n  babycake: new Token(MAINNET, '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c', 18, 'BABYCAKE', 'Baby Cake Token', 'https://babycake.app/'),\n  spy: new Token(TESTNET, '0x6F25144001Ce324E745c3FF25a646A292883feD5', 0, 'SPY', 'Smarty Pay', ''),\n  pcrow: new Token(MAINNET, '0x6ac901eDA879Df9317BB18dF83c4440043D6bBbF', 18, 'PCROW', 'Crow Presale Token', 'https://crowfi.com/'),\n  crow: new Token(MAINNET, '0x85529Febc78834e84a2055204BB802a6a4E2b0bf', 18, 'CROW', 'Crow Token', 'https://crowfi.com/'),\n}\nexport const testnetTokens = {\n  wbnb: new Token(TESTNET, '0xf9a7A2b01Bf758776703677719F8aCf018600070', 18, 'WBNB', 'Wrapped BNB', 'https://www.binance.com/'),\n  cake: new Token(TESTNET, '0x12C6f5dEcaAda351D39E911E8f71e8e99F6D71D9', 0, 'CAKE', 'PancakeSwap Token', 'https://pancakeswap.finance/'),\n  spy: new Token(TESTNET, '0x6F25144001Ce324E745c3FF25a646A292883feD5', 0, 'SPY', 'SmartyPay Token', 'https://smartypay.io'),\n  busd: new Token(TESTNET, '0x2aFD1d7DADEfb7fE31364A4f57f704c1558C8Edc', 18, 'BUSD', 'Binance USD', 'https://www.paxos.com/busd/'),\n  usdc: new Token(TESTNET, '0x9e91D184a3ff79b9A7F666809769BF2E06a4fd7a', 6, 'USDC', 'Binance-Peg USD Coin', 'https://www.centre.io/usdc'),\n  pcrow: new Token(TESTNET, '0x6ac901eDA879Df9317BB18dF83c4440043D6bBbF', 18, 'PCROW', 'Crow Presale Token', 'https://crowfi.com/'),\n  crow: new Token(TESTNET, '0x85529Febc78834e84a2055204BB802a6a4E2b0bf', 18, 'CROW', 'Crow Token', 'https://crowfi.com/'),\n}\n\nexport const cronosTestTokens = {\n  wbnb: new Token(\n    CRONOSTESTNET,\n    '0xf9a7A2b01Bf758776703677719F8aCf018600070',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    CRONOSTESTNET,\n    '0xf9872a4Ea77278F06613A817D563012bfc7761B3',\n    0,\n    'SPY',\n    'SmartyPay Token (fake Cake)',\n    'https://pancakeswap.finance/',\n  ),\n  wcro: new Token(\n    CRONOSTESTNET,\n    '0xdd7fbd7e655de4b8eccb2b3254f6b69b569f0a9a',\n    18,\n    'WCRO',\n    'Wrapped CRO',\n    'https://cronos.crypto.org',\n  ),\n  crow: new Token(\n    CRONOSTESTNET,\n    '0xf9872a4Ea77278F06613A817D563012bfc7761B3',\n    18,\n    'Crow',\n    'Crow Token',\n    'https://crowfi.app',\n  ),\n  pcrow: new Token(CRONOSTESTNET, '0xf7F778D7dbbEff45128B467070620C5e018ea58d', 18, 'PCROW', 'Crow Presale Token', 'https://crowfi.app/'),\n  busd: new Token(\n    CRONOSTESTNET,\n    '0x6A21673bB781C00ae176c640fb8AC8cab1019b60',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  usdc: new Token(\n    CRONOSTESTNET,\n    '0xdba521ad7b3d84c417a224f2830b9399d7180076',\n    6,\n    'USDC',\n    'USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  crow1: new Token(CRONOSTESTNET, '0xe4e4750Ec8ff4C2E489F40906f7412dEf221cc82', 0, 'CROW!', 'CROW Token1', 'https://crowfi.com'),\n  crow2: new Token(CRONOSTESTNET, '0xe4e4750Ec8ff4C2E489F40906f7412dEf221cc82', 0, 'CROW2', 'CROW Token2', 'https://crowfi.com'),\n  msc: new Token(CRONOSTESTNET, '0xb3ae8E5bccebD6F7002C3bF1D5713477B16f8791', 18, 'MSC', 'MyShitCoin', ''),\n  spy: new Token(CRONOSTESTNET, '0x6F25144001Ce324E745c3FF25a646A292883feD5', 0, 'SPY', 'SmartyPay Token', 'https://smartypay.io'),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {});\n  }\n\n  if (parseInt(chainId, 10) === ChainId.CRONOSTESTNET) {\n    return cronosTestTokens\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on Explorer')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","export default {\n  masterChef: {\n    97: '0x426e89a41d2B790791304E9521Adb3DB4e6B4742',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    338: '0x9d294301ba9160a10A454293822794D0B9311341'\n  },\n  sousChef: {\n    97: '0x7B8e2CE337cfEad3633EeB8dDDC242e76fF1A613',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n    338: '0xd5906BD352e04758e61E5c71EEc5ee1eEAA0Ef29'\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n    338: '0x183A41B49A8ebA3585b923115162fed03f5B1Ad9'\n    // 97: '0xfb3ad4656eE1Dd1687c0F2007335a0eC9a02E851',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\n  },\n  nftSale: {\n    56: '0x29fE7148636b7Ae0b1E53777b28dfbaA9327af8E',\n    97: '0xe486De509c5381cbdBF3e71F57D7F1f7570f5c46',\n  },\n  pancakeSquad: {\n    56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n    97: '0xfC0c3F11fDA72Cb9A56F28Ec8D44C0ae4B3ABF86',\n  },\n  referral: {\n    56: '',\n    97: '0x4E24bE6d7234d2e82F7C0F623AC69B434190006D',\n  },\n\n}","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\nexport const getNftSaleAddress = () => {\n  return getAddress(addresses.nftSale)\n}\nexport const getPancakeSquadAddress = () => {\n  return getAddress(addresses.pancakeSquad)\n}\nexport const getReferralAddress = () => {\n  return getAddress(addresses.referral)\n}\n\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [ifoCampaigns[index].address] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    const claimableCampaignId = claimableIfoDataItem.campaignId.toString()\n    if (!campaignMap.has(claimableCampaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableCampaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableCampaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableCampaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n  SerializedPrivateSaleConfig,\n  DeserializedPrivateSaleConfig\n} from 'config/constants/types'\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedPrivateSaleUserData {\n  quoteAllowance: string\n  tempAllowance: string\n  purchasedBalance: string\n  claimedBalance: string\n  claimableBalance: string\n}\n\nexport interface DeserializedPrivateSaleUserData {\n  quoteAllowance: BigNumber\n  tempAllowance: BigNumber\n  purchasedBalance: BigNumber\n  claimedBalance: BigNumber\n  claimableBalance: BigNumber\n}\n\nexport interface SerializedPrivateSale extends SerializedPrivateSaleConfig {\n  userData?: SerializedPrivateSaleUserData\n\n  startBlock?: SerializedBigNumber\n  endBlock?: SerializedBigNumber\n  claimStartBlock?: SerializedBigNumber\n  claimEndBlock?: SerializedBigNumber\n}\n\nexport interface DeserializedPrivateSale extends DeserializedPrivateSaleConfig {\n  userData?: DeserializedPrivateSaleUserData\n\n  startBlock?: BigNumber\n  endBlock?: BigNumber\n  claimStartBlock?: BigNumber\n  claimEndBlock?: BigNumber\n}\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  harvestInterval?: SerializedBigNumber\n  crowPerBlock?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  harvestInterval?: BigNumber\n  crowPerBlock?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\n\n\nexport interface SerializedPrivateSalesState {\n  data: SerializedPrivateSale[]\n  loadArchivedData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedPrivateSalesState {\n  data: DeserializedPrivateSale[]\n  loadArchivedData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport enum ProfileAvatarFetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: NftToken\n      hasRegistered: boolean\n      usernameFetchStatus: ProfileAvatarFetchStatus\n      avatarFetchStatus: ProfileAvatarFetchStatus\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport enum AchievementFetchStatus {\n  ERROR = 'error',\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface AchievementState {\n  achievements: Achievement[]\n  achievementFetchStatus: AchievementFetchStatus\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  privatesales: SerializedPrivateSalesState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  voting: VotingState\n  lottery: LotteryState\n  nftMarket: NftMarketState\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { useTranslation } from 'contexts/Localization'\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || ETHER.symbol}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = mainnetTokens.busd\nconst { wbnb: WBNB } = tokens\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WBNB)) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WBNB)\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WBNB)\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\n  return cakeBusdPrice\n}\n\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\n  return bnbBusdPrice\n}\n","import React from 'react'\nimport styled from 'styled-components'\n// import { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      {/* <Spinner /> */}\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport presaleABI from 'config/abi/presale.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { getContract } from 'utils/web3'\nimport { SerializedPrivateSale, SerializedBigNumber } from '../types'\n\ntype PublicPrivateSaleData = {\n  price: number,\n  startDate: number,\n  endDate: number,\n  startBlock: SerializedBigNumber,\n  endBlock: SerializedBigNumber,\n  claimStartDate: number,\n  claimEndDate: number,\n  claimDays:number[],\n  claimPercents:number[]\n}\n\nconst fetchPrivateSale = async (sale: SerializedPrivateSale): Promise<PublicPrivateSaleData> => {\n  const { type, manager } = sale\n  const contactAddress = getAddress(manager)\n  const calls = [\n    {\n      address: contactAddress,\n      name: 'presaleTokenPrice',\n    },\n    {\n      address: contactAddress,\n      name: 'startTime',\n    },\n    {\n      address: contactAddress,\n      name: 'endTime',\n    },\n    {\n      address: contactAddress,\n      name: 'startBlock',\n    },\n    {\n      address: contactAddress,\n      name: 'endBlock',\n    },\n    {\n      address: contactAddress,\n      name: 'claimStartTime',\n    },\n    {\n      address: contactAddress,\n      name: 'claimEndTime',\n    },\n    {\n      address: contactAddress,\n      name: 'getStages',\n    },\n  ]\n\n  const [presaleTokenPrice, startTime, endTime, startBlock, endBlock, claimStartTime, claimEndTime, stagesInfo] =\n    await multicall(presaleABI, calls)\n\n  const claimDays = stagesInfo[0].map( (day) => new BigNumber(day).toNumber())\n  const claimPercents = stagesInfo[0].map( (percent) => new BigNumber(percent).toNumber())\n  \n  return {\n    price: new BigNumber(1e18).div(new BigNumber(presaleTokenPrice)).toNumber(),\n    startDate: new BigNumber(startTime).toNumber(),\n    endDate: new BigNumber(endTime).toNumber(),\n    startBlock: new BigNumber(startBlock).toJSON(),\n    endBlock: new BigNumber(endBlock).toJSON(),\n    claimStartDate: new BigNumber(claimStartTime).toNumber(),\n    claimEndDate: new BigNumber(claimEndTime).toNumber(),\n    claimDays,\n    claimPercents\n  }\n}\n\nexport default fetchPrivateSale\n\n","import { SerializedPrivateSale } from 'state/types'\nimport fetchPublicPrivateSaleData from './fetchPublicPrivateSaleData'\n\nconst fetchPrivateSale = async (sale: SerializedPrivateSale): Promise<SerializedPrivateSale> => {\n  const salePublicData = await fetchPublicPrivateSaleData(sale)\n\n  return { ...sale, ...salePublicData }\n}\n\nexport default fetchPrivateSale\n","import { SerializedPrivateSaleConfig } from 'config/constants/types'\nimport fetchPrivateSale from './fetchPrivateSale'\n\nconst fetchPrivateSales = async (salesToFetch: SerializedPrivateSaleConfig[]) => {\n  const data = await Promise.all(\n    salesToFetch.map(async (saleConfig) => {\n      const sale = await fetchPrivateSale(saleConfig)\n      const serializedSale = { ...sale }\n      return serializedSale\n    }),\n  )\n  return data\n}\n\nexport default fetchPrivateSales\n","import BigNumber from 'bignumber.js'\nimport presaleABI from 'config/abi/presale.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { SerializedPrivateSaleConfig } from 'config/constants/types'\n\nexport const fetchPrivateSaleTempTokenUserAllowances = async (account: string, salesToFetch: SerializedPrivateSaleConfig[]) => {\n  const calls = salesToFetch.map((sale) => {\n    const contractAddress = getAddress(sale.manager)\n\n    return { address: sale.tempToken.address, name: 'allowance', params: [account, contractAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedAllowances\n}\n\n\nexport const fetchPrivateSaleQuoteTokenUserAllowances = async (account: string, salesToFetch: SerializedPrivateSaleConfig[]) => {\n  const calls = salesToFetch.map((sale) => {\n    const contractAddress = getAddress(sale.manager)\n\n    return { address: sale.quoteToken.address, name: 'allowance', params: [account, contractAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedAllowances\n}\n\nexport const fetchPrivateSaleTempUserAllowances = async (account: string, salesToFetch: SerializedPrivateSaleConfig[]) => {\n  const calls = salesToFetch.map((sale) => {\n    const contractAddress = getAddress(sale.manager)\n\n    return { address: sale.tempToken.address, name: 'allowance', params: [account, contractAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchPrivateSaleUserTally = async (account: string, salesToFetch: SerializedPrivateSaleConfig[]) => {\n  const calls = salesToFetch.map((sale) => {\n    const contractAddress = getAddress(sale.manager)\n    return {\n      address: contractAddress,\n      name: 'userTokenTally',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(presaleABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchPrivateSaleUserClaimed = async (account: string, salesToFetch: SerializedPrivateSaleConfig[]) => {\n  const calls = salesToFetch.map((sale) => {\n    const contractAddress = getAddress(sale.manager)\n    return {\n      address: contractAddress,\n      name: 'userTokenClaimed',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(presaleABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchPrivateSaleUserClaimable = async (account: string, salesToFetch: SerializedPrivateSaleConfig[]) => {\n  const calls = salesToFetch.map((sale) => {\n    const contractAddress = getAddress(sale.manager)\n    return {\n      address: contractAddress,\n      name: 'claimableAmount',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(presaleABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    // return new BigNumber(1e18).toJSON()\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}","import salesConfig from 'config/constants/privatesales'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { PrivateSaleType } from 'config/constants/types'\nimport fetchPrivateSales from './fetchPrivateSales'\nimport {\n  fetchPrivateSaleUserTally,\n  fetchPrivateSaleUserClaimed,\n  fetchPrivateSaleUserClaimable,\n  fetchPrivateSaleTempTokenUserAllowances,\n  fetchPrivateSaleQuoteTokenUserAllowances\n} from './fetchPrivateSaleUser'\n\nimport { SerializedPrivateSalesState, SerializedPrivateSale } from '../types'\n\nconst noAccountSalesConfig = salesConfig.map((farm) => ({\n    ...farm,\n    userData: {\n        tempAllowance: '0',\n        quoteAllowance: '0',\n        purchasedBalance: '0',\n        claimedBalance: '0',\n        claimableBalance: '0',\n    },\n}))\n  \nconst initialState: SerializedPrivateSalesState = {\n    data: noAccountSalesConfig,\n    loadArchivedData: false,\n    userDataLoaded: false,\n}\n\n\nexport const fetchPrivateSalesPublicDataAsync = createAsyncThunk<SerializedPrivateSale[], PrivateSaleType[]>(\n    'privatesales/fetchPrivateSalesPublicDataAsync',\nasync (types) => {\n    const salesToFetch = salesConfig.filter((privatesaleConfig) => types.includes(privatesaleConfig.type))\n\n    const sales = await fetchPrivateSales(salesToFetch)\n\n    return sales\n},\n)\n\ninterface PrivateSaleUserDataResponse {\n  type: PrivateSaleType\n  tempAllowance: string\n  quoteAllowance: string\n  purchasedBalance: string\n  claimedBalance: string\n  claimableBalance: string\n}\n  \nexport const fetchPrivateSalesUserDataAsync = createAsyncThunk<PrivateSaleUserDataResponse[], { account: string; types: PrivateSaleType[] }>(\n'privatesales/fetchPrivateSalesUserDataAsync',\nasync ({ account, types }) => {\n    const salesToFetch = salesConfig.filter((privatesaleConfig) => types.includes(privatesaleConfig.type))\n    const quoteAllowances = await fetchPrivateSaleQuoteTokenUserAllowances(account, salesToFetch);\n    const tempAllowances = await fetchPrivateSaleTempTokenUserAllowances(account, salesToFetch);\n    const userTally = await fetchPrivateSaleUserTally(account, salesToFetch);\n    const userClaimed = await fetchPrivateSaleUserClaimed(account, salesToFetch);\n    const userClaimable = await fetchPrivateSaleUserClaimable(account, salesToFetch);\n\n    return userTally.map((tally, index) => {\n        return {\n            type: salesToFetch[index].type,\n            quoteAllowance: quoteAllowances[index],\n            tempAllowance: tempAllowances[index],\n            purchasedBalance: userTally[index],\n            claimedBalance: userClaimed[index],\n            claimableBalance: userClaimable[index],\n        }\n    })\n},\n)\n\n\n\nexport const privatesalesSlice = createSlice({\n    name: 'PrivateSales',\n    initialState,\n    reducers: {\n        setLoadArchivedPrivateSalesData: (state, action) => {\n        const loadArchivedData = action.payload\n        state.loadArchivedData = loadArchivedData\n      },\n    },\n    extraReducers: (builder) => {\n      // Update privatesales with live data\n      builder.addCase(fetchPrivateSalesPublicDataAsync.fulfilled, (state, action) => {\n        state.data = state.data.map((privatesale) => {\n          const livePrivateSaleData = action.payload.find((privatesaleData) => privatesaleData.type === privatesale.type)\n          return { ...privatesale, ...livePrivateSaleData }\n        })\n      })\n  \n      // Update privatesales with user data\n      builder.addCase(fetchPrivateSalesUserDataAsync.fulfilled, (state, action) => {\n        action.payload.forEach((userDataEl) => {\n          const { type } = userDataEl\n          const index = state.data.findIndex((sale) => sale.type === type )\n          state.data[index] = { ...state.data[index], userData: userDataEl }\n        })\n        state.userDataLoaded = true\n      })\n    },\n  })\n  \n  // Actions\n  export const { setLoadArchivedPrivateSalesData } = privatesalesSlice.actions\n  \n  export default privatesalesSlice.reducer","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement, AchievementFetchStatus } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  achievements: [],\n  achievementFetchStatus: AchievementFetchStatus.NOT_FETCHED,\n}\n\nexport const fetchAchievements = createAsyncThunk<Achievement[], string>(\n  'achievements/fetchAchievements',\n  async (account) => {\n    const achievements = await getAchievements(account)\n    return achievements\n  },\n)\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.achievements.push(action.payload)\n    },\n    clearAchievements: (state) => {\n      state.achievements = []\n      state.achievementFetchStatus = AchievementFetchStatus.NOT_FETCHED\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAchievements.pending, (state) => {\n      state.achievementFetchStatus = AchievementFetchStatus.FETCHING\n    })\n    builder.addCase(fetchAchievements.fulfilled, (state, action) => {\n      state.achievementFetchStatus = AchievementFetchStatus.FETCHED\n      state.achievements = action.payload\n    })\n    builder.addCase(fetchAchievements.rejected, (state) => {\n      state.achievementFetchStatus = AchievementFetchStatus.ERROR\n    })\n  },\n})\n\n// Actions\nexport const { addAchievement, clearAchievements } = achievementSlice.actions\n\nexport default achievementSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { mainnetTokens, testnetTokens,cronosTestTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0xeE203C18ded417D947a9f2Aaec0b25107BB2BE2a'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n  [ChainId.CRONOSTESTNET]: [cronosTestTokens.wcro, cronosTestTokens.crow, cronosTestTokens.usdc]\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n  [ChainId.CRONOSTESTNET]: [cronosTestTokens.wcro, cronosTestTokens.crow, cronosTestTokens.usdc]\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n  [ChainId.CRONOSTESTNET]: [cronosTestTokens.wcro, cronosTestTokens.crow, cronosTestTokens.usdc]\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\nexport { default as privatesalesConfig } from './privatesales'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n  getNftSaleAddress,\n  getPancakeSquadAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\nimport nftSaleAbi from 'config/abi/nftSale.json'\nimport pancakeSquadAbi from 'config/abi/pancakeSquad.json'\nimport erc721CollctionAbi from 'config/abi/erc721collection.json'\nimport privateSaleAbi from 'config/abi/presale.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, tokens.cake.address, signer)\n}\nexport const getUSDCContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, tokens.usdc.address, signer)\n}\nexport const getPrivateSaleContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(privateSaleAbi, address, signer)\n}\n\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\n}\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\n}\nexport const getNftSaleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftSaleAbi, getNftSaleAddress(), signer)\n}\nexport const getPancakeSquadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeSquadAbi, getPancakeSquadAddress(), signer)\n}\nexport const getErc721CollectionContract = (signer?: ethers.Signer | ethers.providers.Provider, address?: string) => {\n  return getContract(erc721CollctionAbi, address, signer)\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @param farmAddress Farm Address\n * @returns Farm Apr\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  crowPerBlock: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = poolWeight ? poolWeight.times(crowPerBlock).times(BLOCKS_PER_YEAR) : new BigNumber(NaN)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\n export const getApy = (apr: number, compoundFrequency = 2, days = 365, performanceFee = 0) => {\n   \n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport default null\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getUSDCContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n  getAnniversaryAchievementContract,\n  getNftMarketContract,\n  getNftSaleContract,\n  getPancakeSquadContract,\n  getErc721CollectionContract,\n  getPrivateSaleContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useUSDC = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getUSDCContract(library.getSigner()), [library])\n}\n\nexport const usePrivateSaleManager = (address) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPrivateSaleContract(address, library.getSigner()), [address, library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useAnniversaryAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\n}\n\nexport const useNftSaleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftSaleContract(library.getSigner()), [library])\n}\n\nexport const usePancakeSquadContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeSquadContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\nexport const useNftMarketContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\n}\n\nexport const useErc721CollectionContract = (collectionAddress: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => {\n    return getErc721CollectionContract(library.getSigner(), collectionAddress)\n  }, [library, collectionAddress])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          {/* <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} /> */}\n          <Text>{ETHER.symbol}</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n  overflow-y: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  return GAS_PRICE_GWEI.cronos\n  // const chainId = process.env.REACT_APP_CHAIN_ID\n  // const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  // return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Crow-LP', 'Crow LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const API_NFT = process.env.REACT_APP_API_NFT\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n  [ChainId.CRONOSTESTNET]: 'https://cronos.crypto.org/explorer/testnet3/',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 40\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\n// export const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_URL = 'http://localhost:3000'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[parseInt(process.env.REACT_APP_CHAIN_ID, 10)]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n// In reality its 10000 because of fast refresh, a bit less here to cover for possible long request times\nexport const PANCAKE_BUNNIES_UPDATE_FREQUENCY = 8000\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5000',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n  cronos = '5000'\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n  cronos: parseUnits(GAS_PRICE.cronos, 'gwei').toString(),\n}\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === ETHER.symbol\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { request, gql } from 'graphql-request'\nimport { stringify } from 'qs'\nimport { GRAPH_API_NFTMARKET, API_NFT } from 'config/constants/endpoints'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { ethers } from 'ethers'\nimport map from 'lodash/map'\nimport { uniq } from 'lodash'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  TokenMarketData,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NftToken,\n  NftLocation,\n  Collection,\n  ApiResponseCollectionTokens,\n  ApiResponseSpecificToken,\n  ApiCollection,\n  CollectionMarketDataBaseFields,\n  Transaction,\n  AskOrder,\n  ApiSingleTokenData,\n  NftAttribute,\n  ApiTokenFilterResponse,\n} from './types'\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\n\n/**\n * API HELPERS\n */\n\n/**\n * Fetch static data from all collections using the API\n * @returns\n */\nexport const getCollectionsApi = async (): Promise<ApiCollection[]> => {\n  const res = await fetch(`${API_NFT}/collections`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error('Failed to fetch NFT collections', res.statusText)\n  return []\n}\n\n/**\n * Fetch static data from a collection using the API\n * @returns\n */\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * Fetch static data for all nfts in a collection using the API\n * @param collectionAddress\n * @param size\n * @param page\n * @returns\n */\nexport const getNftsFromCollectionApi = async (\n  collectionAddress: string,\n  size = 100,\n  page = 1,\n): Promise<ApiResponseCollectionTokens> => {\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n  const requestPath = `${API_NFT}/collections/${collectionAddress}/tokens${\n    !isPBCollection ? `?page=${page}&size=${size}` : ``\n  }`\n\n  const res = await fetch(requestPath)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\n  return null\n}\n\n/**\n * Fetch a single NFT using the API\n * @param collectionAddress\n * @param tokenId\n * @returns NFT from API\n */\nexport const getNftApi = async (\n  collectionAddress: string,\n  tokenId: string,\n): Promise<ApiResponseSpecificToken['data']> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\n  return null\n}\n\n/**\n * Fetch a list of NFT from different collections\n * @param from Array of { collectionAddress: string; tokenId: string }\n * @returns Array of NFT from API\n */\nexport const getNftsFromDifferentCollectionsApi = async (\n  from: { collectionAddress: string; tokenId: string }[],\n): Promise<NftToken[]> => {\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\n  const responses = await Promise.all(promises)\n  // Sometimes API can't find some tokens (e.g. 404 response)\n  // at least return the ones that returned successfully\n  return responses\n    .filter((resp) => resp)\n    .map((res, index) => ({\n      tokenId: res.tokenId,\n      name: res.name,\n      collectionName: res.collection.name,\n      collectionAddress: from[index].collectionAddress,\n      description: res.description,\n      attributes: res.attributes,\n      createdAt: res.createdAt,\n      updatedAt: res.updatedAt,\n      image: {\n        original: res.image?.original,\n        thumbnail: res.image?.thumbnail,\n      },\n    }))\n}\n\n/**\n * SUBGRAPH HELPERS\n */\n\n/**\n * Fetch market data from a collection using the Subgraph\n * @returns\n */\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection\n  } catch (error) {\n    console.error('Failed to fetch collection', error)\n    return null\n  }\n}\n\n/**\n * Fetch market data from all collections using the Subgraph\n * @returns\n */\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        {\n          collections {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n    )\n    return res.collections\n  } catch (error) {\n    console.error('Failed to fetch NFT collections', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for nfts in a collection using the Subgraph\n * @param collectionAddress\n * @param first\n * @param skip\n * @returns\n */\nexport const getNftsFromCollectionSg = async (\n  collectionAddress: string,\n  first = 1000,\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  // Squad to be sorted by tokenId as this matches the order of the paginated API return. For PBs - get the most recent,\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftCollectionMarketData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(orderBy:${isPBCollection ? 'updatedAt' : 'tokenId'}, skip: $skip, first: $first) {\n             ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase(), skip, first },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs from collection', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getNftsByBunnyIdSg = async (\n  bunnyId: string,\n  existingTokenIds: string[],\n  orderDirection: 'asc' | 'desc',\n): Promise<TokenMarketData[]> => {\n  try {\n    const where =\n      existingTokenIds.length > 0\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\n        : { otherId: bunnyId, isTradable: true }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsByBunnyIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: pancakeBunniesAddress.toLowerCase(),\n        where,\n        orderDirection,\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getMarketDataForTokenIds = async (\n  collectionAddress: string,\n  existingTokenIds: string[],\n): Promise<TokenMarketData[]> => {\n  try {\n    if (existingTokenIds.length === 0) {\n      return []\n    }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(first: 1000, where: $where) {\n              ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      {\n        collectionAddress: collectionAddress.toLowerCase(),\n        where: { tokenId_in: existingTokenIds },\n      },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\n    return []\n  }\n}\n\nexport const getNftsMarketData = async (\n  where = {},\n  first = 1000,\n  orderBy = 'id',\n  orderDirection: 'asc' | 'desc' = 'desc',\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\n          nfts(where: $where, first: $first, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\n            ${getBaseNftFields()}\n            transactionHistory {\n              ${getBaseTransactionFields()}\n            }\n          }\n        }\n      `,\n      { where, first, skip, orderBy, orderDirection },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\nexport const getAllPancakeBunniesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\n        currentAskPrice\n      }\n    `,\n    )\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...lowestPricesData,\n        [bunnyId]:\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies lowest prices', error)\n    return {}\n  }\n}\n\nexport const getAllPancakeBunniesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\n        updatedAt\n      }\n    `,\n    )\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...updatedAtData,\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies latest market updates', error)\n    return {}\n  }\n}\n\n/**\n * Returns the lowest price of any NFT in a collection\n */\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\n  try {\n    const response = await getNftsMarketData(\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\n      1,\n      'currentAskPrice',\n      'asc',\n    )\n\n    if (response.length === 0) {\n      return 0\n    }\n\n    const [nftSg] = response\n    return parseFloat(nftSg.currentAskPrice)\n  } catch (error) {\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\n    return 0\n  }\n}\n\n/**\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\n * @param where a User_filter where condition\n * @returns a UserActivity object\n */\nexport const getUserActivity = async (\n  address: string,\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getUserActivity($address: String!) {\n          user(id: $address) {\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n          }\n        }\n      `,\n      { address },\n    )\n\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\n  } catch (error) {\n    console.error('Failed to fetch user Activity', error)\n    return {\n      askOrderHistory: [],\n      buyTradeHistory: [],\n      sellTradeHistory: [],\n    }\n  }\n}\n\n/**\n * Get the most recently listed NFTs\n * @param first Number of nfts to retrieve\n * @returns NftTokenSg[]\n */\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getLatestNftMarketData($first: Int) {\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\n            ${getBaseNftFields()}\n            collection {\n              id\n            }\n          }\n        }\n      `,\n      { first },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\n/**\n * Filter NFTs from a collection\n * @param collectionAddress\n * @returns\n */\nexport const fetchNftsFiltered = async (\n  collectionAddress: string,\n  filters: Record<string, string | number>,\n): Promise<ApiTokenFilterResponse> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/filter?${stringify(filters)}`)\n\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * OTHER HELPERS\n */\n\nexport const getMetadataWithFallback = (apiMetadata: ApiResponseCollectionTokens['data'], bunnyId: string) => {\n  // The fallback is just for the testnet where some bunnies don't exist\n  return (\n    apiMetadata[bunnyId] ?? {\n      name: '',\n      description: '',\n      collection: { name: 'Pancake Bunnies' },\n      image: {\n        original: '',\n        thumbnail: '',\n      },\n    }\n  )\n}\n\nexport const getPancakeBunniesAttributesField = (bunnyId: string) => {\n  // Generating attributes field that is not returned by API\n  // but can be \"faked\" since objects are keyed with bunny id\n  return [\n    {\n      traitType: 'bunnyId',\n      value: bunnyId,\n      displayType: null,\n    },\n  ]\n}\n\nexport const combineApiAndSgResponseToNftToken = (\n  apiMetadata: ApiSingleTokenData,\n  marketData: TokenMarketData,\n  attributes: NftAttribute[],\n) => {\n  return {\n    tokenId: marketData.tokenId,\n    name: apiMetadata.name,\n    description: apiMetadata.description,\n    collectionName: apiMetadata.collection.name,\n    collectionAddress: pancakeBunniesAddress,\n    image: apiMetadata.image,\n    marketData,\n    attributes,\n  }\n}\n\nexport const fetchWalletTokenIdsForCollections = async (\n  account: string,\n  collections: ApiCollections,\n): Promise<TokenIdWithCollectionAddress[]> => {\n  const walletNftPromises = map(collections, async (collection): Promise<TokenIdWithCollectionAddress[]> => {\n    const { address: collectionAddress } = collection\n    const contract = getErc721Contract(collectionAddress)\n    let balanceOfResponse\n\n    try {\n      balanceOfResponse = await contract.balanceOf(account)\n    } catch (e) {\n      console.error(e)\n      return []\n    }\n\n    const balanceOf = balanceOfResponse.toNumber()\n\n    // User has no NFTs for this collection\n    if (balanceOfResponse.eq(0)) {\n      return []\n    }\n\n    const getTokenId = async (index: number) => {\n      try {\n        const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n        const tokenId = tokenIdBn.toString()\n        return tokenId\n      } catch (error) {\n        console.error('getTokenIdAndData', error)\n        return null\n      }\n    }\n\n    const tokenIdPromises = []\n\n    // For each index get the tokenId\n    for (let i = 0; i < balanceOf; i++) {\n      tokenIdPromises.push(getTokenId(i))\n    }\n\n    const tokenIds = await Promise.all(tokenIdPromises)\n    const nftLocation = NftLocation.WALLET\n    const tokensWithCollectionAddress = tokenIds.map((tokenId) => {\n      return { tokenId, collectionAddress, nftLocation }\n    })\n\n    return tokensWithCollectionAddress\n  })\n\n  const walletNfts = await Promise.all(walletNftPromises)\n  return walletNfts.flat()\n}\n\n/**\n * Helper to combine data from the collections' API and subgraph\n */\nexport const combineCollectionData = (\n  collectionApiData: ApiCollection[],\n  collectionSgData: CollectionMarketDataBaseFields[],\n): Record<string, Collection> => {\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\n    {},\n  )\n\n  return collectionApiData.reduce((accum, current) => {\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\n    const collection: Collection = {\n      ...current,\n      ...collectionMarket,\n    }\n\n    return {\n      ...accum,\n      [current.address]: collection,\n    }\n  }, {})\n}\n\n/**\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\n * @param tokenId string\n * @param tokenIdsInWallet array of tokenIds in wallet\n * @param tokenIdsForSale array of tokenIds on sale\n * @param profileNftId Optional tokenId of users' profile picture\n * @returns NftLocation enum value\n */\nexport const getNftLocationForMarketNft = (\n  tokenId: string,\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftLocation => {\n  if (tokenId === profileNftId) {\n    return NftLocation.PROFILE\n  }\n  if (tokenIdsForSale.includes(tokenId)) {\n    return NftLocation.FORSALE\n  }\n  if (tokenIdsInWallet.includes(tokenId)) {\n    return NftLocation.WALLET\n  }\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\n  return NftLocation.WALLET\n}\n\n/**\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\n * @param walletNfts TokenIdWithCollectionAddress\n * @param marketDataForWalletNfts TokenMarketData[]\n * @returns TokenMarketData[]\n */\nexport const attachMarketDataToWalletNfts = (\n  walletNfts: TokenIdWithCollectionAddress[],\n  marketDataForWalletNfts: TokenMarketData[],\n): TokenMarketData[] => {\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\n    const marketData = marketDataForWalletNfts.find(\n      (marketNft) =>\n        marketNft.tokenId === walletNft.tokenId &&\n        marketNft.collection.id.toLowerCase() === walletNft.collectionAddress.toLowerCase(),\n    )\n    return (\n      marketData ?? {\n        tokenId: walletNft.tokenId,\n        collection: {\n          id: walletNft.collectionAddress.toLowerCase(),\n        },\n        nftLocation: walletNft.nftLocation,\n        metadataUrl: null,\n        transactionHistory: null,\n        currentSeller: null,\n        isTradable: null,\n        currentAskPrice: null,\n        latestTradedPriceInBNB: null,\n        tradeVolumeBNB: null,\n        totalTrades: null,\n        otherId: null,\n      }\n    )\n  })\n  return walletNftsWithMarketData\n}\n\n/**\n * Attach TokenMarketData and location to NftToken\n * @param nftsWithMetadata NftToken[] with API metadata\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\n * @param walletNfts makret data for nfts in a user's wallet\n * @param tokenIdsInWallet array of token ids in user's wallet\n * @param tokenIdsForSale array of token ids of nfts that are on sale\n * @param profileNftId profile picture token id\n * @returns NFT[]\n */\nexport const combineNftMarketAndMetadata = (\n  nftsWithMetadata: NftToken[],\n  nftsForSale: TokenMarketData[],\n  walletNfts: TokenMarketData[],\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftToken[] => {\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\n    // Get metadata object\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\n    let marketData\n    if (isOnSale) {\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    } else {\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    }\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\n    return { ...nft, marketData, location }\n  })\n  return completeNftData\n}\n\n/**\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\n * @param account\n * @param collections\n * @param profileNftWithCollectionAddress\n * @returns Promise<NftToken[]>\n */\nexport const getCompleteAccountNftData = async (\n  account: string,\n  collections: ApiCollections,\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\n): Promise<NftToken[]> => {\n  const walletNftIdsWithCollectionAddress = await fetchWalletTokenIdsForCollections(account, collections)\n  if (profileNftWithCollectionAddress?.tokenId) {\n    walletNftIdsWithCollectionAddress.unshift(profileNftWithCollectionAddress)\n  }\n\n  const uniqueCollectionAddresses = uniq(\n    walletNftIdsWithCollectionAddress.map((walletNftId) => walletNftId.collectionAddress),\n  )\n\n  const walletNftsByCollection = uniqueCollectionAddresses.map((collectionAddress) => {\n    return {\n      collectionAddress,\n      idWithCollectionAddress: walletNftIdsWithCollectionAddress.filter(\n        (walletNft) => walletNft.collectionAddress === collectionAddress,\n      ),\n    }\n  })\n\n  const walletMarketDataRequests = walletNftsByCollection.map((walletNftByCollection) => {\n    const tokenIdIn = walletNftByCollection.idWithCollectionAddress.map((walletNft) => walletNft.tokenId)\n    return getNftsMarketData({\n      tokenId_in: tokenIdIn,\n      collection: walletNftByCollection.collectionAddress.toLowerCase(),\n    })\n  })\n\n  const walletMarketDataResponses = await Promise.all(walletMarketDataRequests)\n  const walletMarketData = walletMarketDataResponses.flat()\n\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIdsWithCollectionAddress, walletMarketData)\n\n  const walletTokenIds = walletNftIdsWithCollectionAddress\n    .filter((walletNft) => {\n      // Profile Pic NFT is no longer wanted in this array, hence the filter\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\n    })\n    .map((nft) => nft.tokenId)\n\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\n\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\n  })\n\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([\n    ...forSaleNftIds,\n    ...walletNftIdsWithCollectionAddress,\n  ])\n\n  const completeNftData = combineNftMarketAndMetadata(\n    metadataForAllNfts,\n    marketDataForSaleNfts,\n    walletNftsWithMarketData,\n    walletTokenIds,\n    tokenIdsForSale,\n    profileNftWithCollectionAddress?.tokenId,\n  )\n\n  return completeNftData\n}\n\n/**\n * Fetch distribution information for a collection\n * @returns\n */\nexport const getCollectionDistributionApi = async <T>(collectionAddress: string): Promise<T> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/distribution`)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress} distribution`, res.statusText)\n  return null\n}\n","export const getBaseNftFields = () => `\n  tokenId\n  metadataUrl\n  currentAskPrice\n  currentSeller\n  latestTradedPriceInBNB\n  tradeVolumeBNB\n  totalTrades\n  isTradable\n  updatedAt\n  otherId\n  collection {\n    id\n  }\n`\n\nexport const getBaseTransactionFields = () => `\n  id\n  block\n  timestamp\n  askPrice\n  netPrice\n  withBNB\n  buyer {\n    id\n  }\n  seller {\n    id\n  }\n`\n\nexport const getCollectionBaseFields = () => `\n  id\n  name\n  symbol\n  active\n  totalTrades\n  totalVolumeBNB\n  numberTokensListed\n  creatorAddress\n  tradingFee\n  creatorFee\n  whitelistChecker\n`\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const gasPrice = useGasPrice()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n        gasPrice\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice, gasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport privatesalesReducer from './privatesales'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport nftMarketReducer from './nftMarket/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    privatesales:privatesalesReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    nftMarket: nftMarketReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { BigNumberish } from 'ethers'\n\n// Collections -> Nfts -> Transactions\n// Users -> Nft tokens IDs\n\n// TODO: Handle the error state on the UI\nexport enum NFTMarketInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum UserNftInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZING = 'INITIALIZING',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum NftFilterLoadingState {\n  IDLE = 'IDLE',\n  LOADING = 'LOADING',\n}\n\nexport interface State {\n  initializationState: NFTMarketInitializationState\n  data: {\n    collections: Record<string, Collection> // string is the address\n    nfts: Record<string, NftToken[]> // string is the collection address\n    filters: Record<string, NftFilter> // string is the collection address\n    loadingState: {\n      isUpdatingPancakeBunnies: boolean\n      latestPancakeBunniesUpdateAt: number\n    }\n    users: Record<string, User> // string is the address\n    user: UserNftsState\n  }\n}\n\nexport interface UserNftsState {\n  userNftsInitializationState: UserNftInitializationState\n  nfts: NftToken[]\n  activity: UserActivity\n}\n\nexport interface Transaction {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  netPrice: string\n  buyer: { id: string }\n  seller: { id: string }\n  withBNB: boolean\n  nft?: TokenMarketData\n}\n\nexport enum AskOrderType {\n  NEW = 'NEW',\n  MODIFY = 'MODIFY',\n  CANCEL = 'CANCEL',\n}\n\nexport interface AskOrder {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  orderType: AskOrderType\n  nft?: TokenMarketData\n}\n\nexport interface Image {\n  original: string\n  thumbnail: string\n  mp4?: string\n  webm?: string\n  gif?: string\n}\n\nexport enum NftLocation {\n  FORSALE = 'For Sale',\n  PROFILE = 'Profile Pic',\n  WALLET = 'In Wallet',\n}\n\n// Market data regarding specific token ID, acquired via subgraph\nexport interface TokenMarketData {\n  tokenId: string\n  metadataUrl: string\n  currentAskPrice: string\n  currentSeller: string\n  latestTradedPriceInBNB: string\n  tradeVolumeBNB: string\n  totalTrades: string\n  isTradable: boolean\n  otherId: string\n  collection?: {\n    id: string\n  }\n  updatedAt?: string\n  transactionHistory?: Transaction[]\n}\n\n// Represents single NFT token, either Squad-like NFT or single PancakeBunny.\nexport interface NftToken {\n  tokenId: string\n  name: string\n  description: string\n  collectionName: string\n  collectionAddress: string\n  image: Image\n  attributes?: NftAttribute[]\n  createdAt?: string // API createdAt\n  updatedAt?: string // API updatedAt\n  marketData?: TokenMarketData\n  location?: NftLocation\n  meta?: Record<string, string | number>\n}\n\nexport interface NftFilter {\n  loadingState: NftFilterLoadingState\n  activeFilters: Record<string, NftAttribute>\n  showOnlyOnSale: boolean\n  ordering: {\n    field: string\n    direction: 'asc' | 'desc'\n  }\n}\n\nexport interface TokenIdWithCollectionAddress {\n  collectionAddress: string\n  tokenId: string\n  nftLocation?: NftLocation\n}\n\nexport interface NftAttribute {\n  traitType: string\n  value: string | number\n  displayType: string\n}\n\n// Internal type used to refer to a collection\n// Most fields are populated from API (via ApiCollection type)\nexport interface Collection {\n  id: string\n  address: string\n  name: string\n  description?: string\n  symbol: string\n  active: boolean\n  totalVolumeBNB: string\n  numberTokensListed: string\n  tradingFee: string\n  creatorFee: string\n  owner: string\n  totalSupply: string\n  verified: boolean\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[]\n}\n\nexport interface ApiCollections {\n  [key: string]: Collection\n}\n\nexport interface User {\n  address: string\n  numberTokensListed: BigNumberish\n  numberTokensPurchased: BigNumberish\n  numberTokensSold: BigNumberish\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\n}\n\n/**\n * API RESPONSES\n */\n\nexport interface ApiCollection {\n  address: string\n  owner: string\n  name: string\n  description: string\n  symbol: string\n  totalSupply: string\n  verified: boolean\n  createdAt: string\n  updatedAt: string\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\n}\n\n// Get all collections\n// ${API_NFT}/collections/\nexport interface ApiCollectionsReponse {\n  total: number\n  data: ApiCollection[]\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiSingleCollectionResponse {\n  data: ApiCollection\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiTokenFilterResponse {\n  total: number\n  data: Record<string, ApiSingleTokenData>\n}\n\nexport interface ApiSingleTokenData {\n  name: string\n  description: string\n  image: Image\n  collection: {\n    name: string\n  }\n  attributes?: NftAttribute[]\n  tokenId?: string\n}\n\n// Get tokens within collection\n// ${API_NFT}/collections/${collectionAddress}/tokens\nexport interface ApiResponseCollectionTokens {\n  total: number\n  attributesDistribution: Record<string, number>\n  data: Record<string, ApiSingleTokenData>\n}\n\n// Get specific token data\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\nexport interface ApiResponseSpecificToken {\n  data: {\n    tokenId: string\n    name: string\n    description: string\n    image: Image\n    createdAt: string\n    updatedAt: string\n    attributes: NftAttribute[]\n    collection: {\n      name: string\n    }\n  }\n}\n\n// ${API_NFT}/collections/${collectionAddress}/distribution\nexport interface ApiCollectionDistribution {\n  total: number\n  data: Record<string, Record<string, number>>\n}\n\nexport interface ApiCollectionDistributionPB {\n  total: number\n  data: Record<string, number>\n}\n\n/**\n * SUBGRAPH RESPONSES\n */\n\nexport interface CollectionMarketDataBaseFields {\n  id: string\n  name: string\n  symbol: string\n  active: boolean\n  totalTrades: string\n  totalVolumeBNB: string\n  numberTokensListed: string\n  creatorAddress: string\n  tradingFee: string\n  creatorFee: string\n  whitelistChecked: string\n}\n\nexport interface UserActivity {\n  askOrderHistory: AskOrder[]\n  buyTradeHistory: Transaction[]\n  sellTradeHistory: Transaction[]\n  initializationState: UserNftInitializationState\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n  [ChainId.CRONOSTESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n    [ChainId.CRONOSTESTNET]: { ...map1[ChainId.CRONOSTESTNET], ...map2[ChainId.CRONOSTESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\nimport tokens from 'config/constants/tokens'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: tokens.wbnb.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCrow('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on Explorer')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      {/* <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs> */}\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {/* {view === WalletView.TRANSACTIONS && <WalletTransactions />} */}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\n\nconst useUserAgent = () => {\n  useEffect(() => {\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\n  }, [])\n}\n\nexport default useUserAgent\n","import { useEffect } from 'react'\nimport history from 'routerHistory'\n\nconst useScrollOnRouteChange = () => {\n  useEffect(() => {\n    const unlisten = history.listen((args) => {\n      if (args.hash === '') {\n        setTimeout(() => {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n          })\n        }, 50)\n      }\n    })\n\n    return () => unlisten()\n  }, [])\n}\n\nexport default useScrollOnRouteChange\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Playfair Display', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuItemsType, DropdownMenuItemType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  {\n    label: t('Trade'),\n    icon: 'Trade',\n    href: '/swap',\n    showItemsOnMobile: false,\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/liquidity',\n      },\n    ],\n  },\n  {\n    label: t('Farms'),\n    href: '/farms',\n    icon: 'Earn',\n    items: [\n      {\n        label: t('Farms'),\n        href: '/farms',\n      },\n      {\n        label: t('Pools'),\n        href: '/pools',\n      },\n    ],\n  },\n  {\n    label: t('Private Sales'),\n    href: '/privatesales',\n    icon: 'Earn',\n    items: [\n      {\n        label: t('privatesales'),\n        href: '/privatesales',\n      },\n    ],\n  },\n\n  // {\n  //   label: t('Win'),\n  //   href: '/prediction',\n  //   icon: 'Trophy',\n  //   items: [\n  //     {\n  //       label: t('Prediction (BETA)'),\n  //       href: '/prediction',\n  //     },\n  //     {\n  //       label: t('Lottery'),\n  //       href: '/lottery',\n  //     },\n  //   ],\n  // },\n  {\n    label: t('NFT'),\n    href: `${nftsBaseUrl}`,\n    icon: 'Nft',\n    items: [\n      {\n        label: t('Overview'),\n        href: `${nftsBaseUrl}`,\n      },\n      {\n        label: t('Collections'),\n        href: `${nftsBaseUrl}/collections`,\n      },\n    ],\n  },\n  // {\n  //   label: '',\n  //   href: '/info',\n  //   icon: 'More',\n  //   hideSubNav: true,\n  //   items: [\n  //     {\n  //       label: t('Info'),\n  //       href: '/info',\n  //     },\n  //     {\n  //       label: t('IFO'),\n  //       href: '/ifo',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://medium.com/pancakeswap',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text, Link } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport tokens from 'config/constants/tokens'\nimport { BASE_URL } from 'config'\nimport CopyAddress from './CopyAddress'\n \ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { balance: crowBalance, fetchStatus: crowFetchStatus } = useTokenBalance(tokens.crow.address)\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        {fetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{formatBigNumber(balance, 6)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('CROW Balance')}</Text>\n        {crowFetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(crowBalance, 18, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on Explorer')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\nimport { getFullDisplayBalance, formatBigNumber } from '../../../utils/formatBalance'\nimport tokens from '../../../config/constants/tokens'\n\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile?.nft?.image?.thumbnail\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n  const { balance: crowBalance, fetchStatus: spyFetchStatus } = useTokenBalance(tokens.crow.address)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    // <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n    <UIKitUserMenu text={getFullDisplayBalance(crowBalance, 18, 3)} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      {/* <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={() => history.push(`${nftsBaseUrl}/profile/${account.toLowerCase()}`)}>\n        {t('Your NFTs')}\n      </UserMenuItem>\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider /> */}\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import { ConfigMenuItemsType } from './config/config'\n\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({ menuItem, pathname }))\n\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href)) ?? []\n\n  // Pathname doesn't include any submenu item href - return undefined\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined\n  }\n\n  // Pathname includes one sub menu item href - return it\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0]\n  }\n\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\n  const mostSpecificMatch = activeSubMenuItems.sort(\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\n  )[0]\n\n  return mostSpecificMatch\n}\n","import React from 'react'\nimport { useLocation } from 'react-router'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport config from './config/config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\nimport { footerLinks } from './config/footerConfig'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n  const { pathname } = useLocation()\n\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\n  const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      // globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      // subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\n      footerLinks={footerLinks(t)}\n      // activeItem={activeMenuItem?.href}\n      // activeSubItem={activeSubMenuItem?.href}\n      // buyCakeLabel={t('Buy CAKE')}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import { FooterLinkType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nexport const footerLinks: (t: ContextApi['t']) => FooterLinkType[] = (t) => [\n  // {\n  //   label: t('About'),\n  //   items: [\n  //     {\n  //       label: t('Contact'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us',\n  //     },\n  //     {\n  //       label: t('Brand'),\n  //       href: 'https://docs.pancakeswap.finance/brand',\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://medium.com/pancakeswap',\n  //     },\n  //     {\n  //       label: t('Community'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us/telegram',\n  //     },\n  //     {\n  //       label: t('CAKE token'),\n  //       href: 'https://docs.pancakeswap.finance/tokenomics/cake',\n  //     },\n  //     {\n  //       label: '—',\n  //     },\n  //     {\n  //       label: t('Online Store'),\n  //       href: 'https://pancakeswap.creator-spring.com/',\n  //       isHighlighted: true,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Help'),\n  //   items: [\n  //     {\n  //       label: t('Customer Support'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us/customer-support',\n  //     },\n  //     {\n  //       label: t('Troubleshooting'),\n  //       href: 'https://docs.pancakeswap.finance/help/troubleshooting',\n  //     },\n  //     {\n  //       label: t('Guides'),\n  //       href: 'https://docs.pancakeswap.finance/get-started',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Developers'),\n  //   items: [\n  //     {\n  //       label: 'Github',\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: t('Documentation'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: t('Bug Bounty'),\n  //       href: 'https://app.gitbook.com/@pancakeswap-1/s/pancakeswap/code/bug-bounty',\n  //     },\n  //     {\n  //       label: t('Audits'),\n  //       href: 'https://docs.pancakeswap.finance/help/faq#is-pancakeswap-safe-has-pancakeswap-been-audited',\n  //     },\n  //     {\n  //       label: t('Careers'),\n  //       href: 'https://docs.pancakeswap.finance/hiring/become-a-chef',\n  //     },\n  //   ],\n  // },\n]\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {earningsPercentageToDisplay || isFinished ? (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          {!isFinished && (\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          )}\n        </ApyLabelContainer>\n      ) : (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            {performanceFee ? (\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            ) : (\n              <Skeleton width=\"90px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport { mainnetTokens } from 'config/constants/tokens'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await sousChefContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from '@pancakeswap/sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: DeserializedPool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ViewMode } from 'state/user/actions'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Bounty collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('CAKE bounty has been sent to your wallet.')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst Container = styled.div`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <Container>\n      <StyledLink external href=\"https://docs.pancakeswap.finance/products/syrup-pool/syrup-pool-faq\">\n        <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n          <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n            {t('Help')}\n          </ButtonText>\n          <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n        </Button>\n      </StyledLink>\n    </Container>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  scroll-margin-top: 64px;\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n  useFetchCakeVault,\n  useCakeVault,\n} from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (pool.stakingTokenPrice && totalCakeInVault.isFinite()) {\n                totalStaked =\n                  +formatUnits(ethers.BigNumber.from(totalCakeInVault.toString()), pool.stakingToken.decimals) *\n                  pool.stakingTokenPrice\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && pool.stakingTokenPrice && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked =\n                  +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals) * pool.stakingTokenPrice\n              }\n            } else if (pool.totalStaked?.isFinite() && pool.stakingTokenPrice) {\n              totalStaked =\n                +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals) *\n                pool.stakingTokenPrice\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { Token } from '@pancakeswap/sdk'\nimport tokens from 'config/constants/tokens'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  // safemoon,\n  // bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on Explorer')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal\n      title={t('Import Token')}\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from 'utils/truncateHash'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liquidity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact Too High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\n          {\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            word: confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\n        {\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport useUserAgent from 'hooks/useUserAgent'\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport GlobalCheckClaimStatus from './components/GlobalCheckClaimStatus'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst PrivateSales = lazy(() => import('./views/PrivateSales'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\nconst NftMarket = lazy(() => import('./views/Nft/market'))\nconst ProfileCreation = lazy(() => import('./views/ProfileCreation'))\nconst PancakeSquad = lazy(() => import('./views/PancakeSquad'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account } = useWeb3React()\n\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  useScrollOnRouteChange()\n  useUserAgent()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      {/* <GlobalCheckClaimStatus excludeLocations={[]} /> */}\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/privatesales\">\n              <PrivateSales />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/create-profile\">\n              <ProfileCreation />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* NFT */}\n            <Route path=\"/nfts\">\n              <NftMarket />\n            </Route>\n\n            <Route path=\"/pancake-squad\">\n              <PancakeSquad />\n            </Route>\n\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Redirect to=\"/nfts\" />\n            </Route>\n            <Route path=\"/profile\">\n              <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />   \n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n"],"sourceRoot":""}