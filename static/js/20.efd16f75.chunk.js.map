{"version":3,"sources":["views/Voting/helpers.ts","views/Voting/config.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","../../node_modules/date-fns/esm/parseISO/index.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx"],"names":["isCoreProposal","proposal","ADMINS","includes","author","toLowerCase","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","tokens","cake","decimals","generatePayloadData","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","sendSnapshotData","message","a","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","power","parseFloat","metadata","votingPower","PROPOSALS_TO_SHOW","map","IPFS_GATEWAY","VOTE_THRESHOLD","VotingBox","styled","div","theme","colors","cardBorder","ModalInner","props","mb","maxWidth","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","t","useTranslation","as","fontSize","color","textTransform","bold","formatNumber","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","isActive","useWeb3React","useState","setVotingPower","isLoading","setIsLoading","useEffect","fetchVotingPower","getActivePools","eligiblePools","contractAddress","getAddress","prevVotingPower","Table","table","text","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","MILLISECONDS_IN_HOUR","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","argument","dirtyOptions","requiredArgs","arguments","options","additionalDigits","toInteger","RangeError","Object","prototype","toString","call","NaN","date","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","offset","getTime","time","parseTime","dirtyDate","result","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","dateString","timeString","array","split","length","test","substr","token","exec","replace","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","value","hours","parseTimeUnit","minutes","seconds","validateTime","timezoneString","sign","_hours","validateTimezone","BaseLabel","label","Label","SecondaryLabel","FormError","children","FormErrors","errors","mt","Choice","onRemove","onTextInput","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","currentTarget","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","hasMinimumChoices","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","isValid","dateStr","format","timeStr","VoteDetailsModal","onDismiss","modalIsOpen","setModalIsOpen","useTheme","title","headerBackground","gradients","cardHeader","width","height","size","EasyMde","lazy","CreateProposal","times","startDate","startTime","endDate","endTime","snapshot","setState","fieldsState","setFieldsState","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","isArray","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","SnapshotCommand","PROPOSAL","payload","start","end","signMessage","sig","msg","ipfsHash","console","updateValue","key","prevState","prevFieldsState","handleDateChange","useMemo","hideIcons","Container","py","Page","to","onSubmit","htmlFor","inputName","required","onTextChange","px","DatePicker","selected","placeholderText","mr","href","getBscScanLink","truncateHash","endIcon","spin","isEmpty","count","ConnectWalletButton"],"mappings":"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","file":"static/js/20.efd16f75.chunk.js","sourcesContent":["import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport tokens from 'config/constants/tokens'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return ADMINS.includes(proposal.author.toLowerCase())\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: tokens.cake.address, decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnapshotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    let power = parseFloat(vote.metadata?.votingPower)\n\n    if (!power) {\n      power = 0\n    }\n\n    return accum + power\n  }, 0)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMINS = [\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\n].map((address) => address.toLowerCase())\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: number\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {formatNumber(total, 0, 3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakePoolBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Syrup Pools')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('CAKE BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n  total: number\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: 0,\n  cakeVaultBalance: 0,\n  cakePoolBalance: 0,\n  poolsBalance: 0,\n  cakeBnbLpBalance: 0,\n  total: 0,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: parseFloat(cakeBalance),\n            cakeBnbLpBalance: parseFloat(cakeBnbLpBalance),\n            cakePoolBalance: parseFloat(cakePoolBalance),\n            poolsBalance: parseFloat(poolsBalance),\n            cakeVaultBalance: parseFloat(cakeVaultBalance),\n            total: parseFloat(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: Table,\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import React from 'react'\nimport { Box, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\n    useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker } from 'components/DatePicker'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport { PageMeta } from 'components/Layout/Page'\nimport { sendSnapshotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMINS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = lazy(() => import('components/EasyMde'))\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useHistory()\n  const { library } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnapshotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      toastError(t('Error'), error?.message || error?.error)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(() => {\n    return {\n      hideIcons:\n        account && ADMINS.includes(account.toLowerCase())\n          ? []\n          : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }\n  }, [account])\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <PageMeta />\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <Link to=\"/\">{t('Home')}</Link>\n          <Link to=\"/voting\">{t('Voting')}</Link>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getBscScanLink(account, 'address')}>{truncateHash(account)}</LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n    </Container>\n  )\n}\n\nexport default CreateProposal\n"],"sourceRoot":""}